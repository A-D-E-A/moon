"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2753],{5318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9022:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(7378),a=n(9619);function o(e){let{header:t,updated:n,version:o}=e;return r.createElement(a.Z,{text:`v${o}`,variant:n?"success":"info",className:t?"absolute right-0 top-1.5":"ml-2"})}},9619:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(7378),a=n(8944),o=n(1792);const s={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function i(e){let{className:t,icon:n,text:i,variant:l}=e;return r.createElement("span",{className:(0,a.Z)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",l?s[l]:"bg-gray-100 text-gray-800",t)},n&&r.createElement(o.Z,{icon:n,className:"mr-1"}),i)}},9478:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=n(5773),a=(n(7378),n(5318)),o=n(9022);const s={title:"query tasks",sidebar_label:"tasks"},i=void 0,l={unversionedId:"commands/query/tasks",id:"commands/query/tasks",title:"query tasks",description:"Use the moon query tasks sub-command to query task information for all projects in the project",source:"@site/docs/commands/query/tasks.mdx",sourceDirName:"commands/query",slug:"/commands/query/tasks",permalink:"/docs/commands/query/tasks",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/commands/query/tasks.mdx",tags:[],version:"current",frontMatter:{title:"query tasks",sidebar_label:"tasks"},sidebar:"docs",previous:{title:"projects",permalink:"/docs/commands/query/projects"},next:{title:"touched-files",permalink:"/docs/commands/query/touched-files"}},p={},c=[{value:"Options",id:"options",level:3}],u={toc:c};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(o.Z,{header:!0,version:"0.24",mdxType:"VersionLabel"}),(0,a.kt)("p",null,"Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"moon query tasks")," sub-command to query task information for all projects in the project\ngraph. The tasks list can be filtered by passing ",(0,a.kt)("a",{parentName:"p",href:"#options"},"options"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'# Find all tasks grouped by project\n$ moon query tasks\n\n# Find all tasks for projects with an id that matches "react"\n$ moon query tasks --id react\n')),(0,a.kt)("p",null,"By default, this will output a list of projects, and tasks within the project being indented (with a\ntab) on their own line."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"web\n    :lint | eslint\n    :test | jest\napp\n    :format | prettier\n")),(0,a.kt)("p",null,"The tasks can also be output in JSON (",(0,a.kt)("a",{parentName:"p",href:"/api/types/interface/Task"},"which contains all data"),") by\npassing the ",(0,a.kt)("inlineCode",{parentName:"p"},"--json")," flag. The output has the following structure:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"{\n    tasks: Record<string, Record<string, Task>>,\n    options: QueryOptions,\n}\n")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("p",null,"All values are case-insensitive regex patterns."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--alias <regex>")," - Filter projects that match this alias."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--affected")," - Filter projects that have been affected by touched files."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--id <regex>")," - Filter projects that match this ID/name."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--json")," - Display the projects in JSON format."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--language <regex>")," - Filter projects of this programming language."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--source <regex>")," - Filter projects that match this source path."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--tasks <regex>")," - Filter projects that have the following tasks."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--type <regex>")," - Filter project of this type.")))}m.isMDXComponent=!0}}]);