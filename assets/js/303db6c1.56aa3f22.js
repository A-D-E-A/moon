"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6065],{6243:function(e,n,t){t.d(n,{Z:function(){return o}});var a=t(7378),l=t(8944),r="tabItem_lLGn";function o(e){var n=e.children,t=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,o),hidden:t},n)}},637:function(e,n,t){t.d(n,{Z:function(){return m}});var a=t(5773),l=t(7378),r=t(6457),o=t(784),i=t(9947),s=t(3457),p=t(8944),u="tabList_lSCs",c="tabItem_WhCL";function d(e){var n,t,r,d=e.lazy,m=e.block,k=e.defaultValue,g=e.values,f=e.groupId,b=e.className,v=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=g?g:v.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),y=(0,o.l)(h,(function(e,n){return e.value===n.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var N=null===k?k:null!=(n=null!=k?k:null==(t=v.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(r=v[0])?void 0:r.props.value;if(null!==N&&!h.some((function(e){return e.value===N})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var j=(0,i.U)(),w=j.tabGroupChoices,x=j.setTabGroupChoices,E=(0,l.useState)(N),T=E[0],Z=E[1],C=[],P=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var D=w[f];null!=D&&D!==T&&h.some((function(e){return e.value===D}))&&Z(D)}var I=function(e){var n=e.currentTarget,t=C.indexOf(n),a=h[t].value;a!==T&&(P(n),Z(a),null!=f&&x(f,a))},S=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=C.indexOf(e.currentTarget)+1;t=C[a]||C[0];break;case"ArrowLeft":var l=C.indexOf(e.currentTarget)-1;t=C[l]||C[C.length-1]}null==(n=t)||n.focus()};return l.createElement("div",{className:(0,p.Z)("tabs-container",u)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":m},b)},h.map((function(e){var n=e.value,t=e.label,r=e.attributes;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,key:n,ref:function(e){return C.push(e)},onKeyDown:S,onFocus:I,onClick:I},r,{className:(0,p.Z)("tabs__item",c,null==r?void 0:r.className,{"tabs__item--active":T===n})}),null!=t?t:n)}))),d?(0,l.cloneElement)(v.filter((function(e){return e.props.value===T}))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},v.map((function(e,n){return(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==T})}))))}function m(e){var n=(0,r.Z)();return l.createElement(d,(0,a.Z)({key:String(n)},e))}},6642:function(e,n,t){t.d(n,{Z:function(){return p}});var a=t(7378),l=t(9589),r=t(6243),o=t(637);function i(e,n,t){var a=e.package?"yarn workspace "+e.package+" add ":"yarn add ";return e.dev?a+="--dev ":e.peer&&(a+="--peer "),t&&n&&!e.package&&(a+="-W "),a+=e.dep}function s(e,n){var t="pnpm add ";return e.dev?t+="--save-dev ":e.peer&&(t+="--save-peer "),e.package?t+="--filter "+e.package+" ":n&&(t+="-w "),t+=e.dep}function p(e){var n=i(e,!1,!0),t=s(e,!1);return e.package||(n+="\n\n# If using workspaces\n",t+="\n\n# If using workspaces\n",n+=i(e,!0,!0),t+=s(e,!0)),a.createElement(o.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"Yarn (classic)",value:"yarn1"},{label:"npm",value:"npm"},{label:"pnpm",value:"pnpm"}]},a.createElement(r.Z,{value:"yarn"},a.createElement(l.Z,{language:"shell"},i(e,!1,!1))),a.createElement(r.Z,{value:"yarn1"},a.createElement(l.Z,{language:"shell"},n)),a.createElement(r.Z,{value:"npm"},a.createElement(l.Z,{language:"shell"},function(e){var n="npm install ";return e.dev?n+="--save-dev ":e.peer&&(n+="--save-peer "),e.package&&(n+="--workspace "+e.package+" "),n+e.dep}(e))),a.createElement(r.Z,{value:"pnpm"},a.createElement(l.Z,{language:"shell"},t)))}},5453:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return k}});var a=t(5773),l=t(808),r=(t(7378),t(5318)),o=t(637),i=t(6243),s=t(6642),p=["components"],u={title:"Packemon example",sidebar_label:"Packemon"},c=void 0,d={unversionedId:"guides/examples/packemon",id:"guides/examples/packemon",title:"Packemon example",description:"Packemon has been prototyped in our",source:"@site/docs/guides/examples/packemon.mdx",sourceDirName:"guides/examples",slug:"/guides/examples/packemon",permalink:"/docs/guides/examples/packemon",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/guides/examples/packemon.mdx",tags:[],version:"current",frontMatter:{title:"Packemon example",sidebar_label:"Packemon"},sidebar:"docs",previous:{title:"Next.js",permalink:"/docs/guides/examples/next"},next:{title:"Prettier",permalink:"/docs/guides/examples/prettier"}},m={},k=[{value:"Setup",id:"setup",level:2},{value:"TypeScript integration",id:"typescript-integration",level:3},{value:"Build targets",id:"build-targets",level:3}],g={toc:k};function f(e){var n=e.components,t=(0,l.Z)(e,p);return(0,r.kt)("wrapper",(0,a.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Packemon has been prototyped in our\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moonrepo/examples/blob/master/.moon/project.yml#L22"},"examples repository"),",\ncheck it out!")),(0,r.kt)("p",null,"In this guide, you'll learn how to integrate ",(0,r.kt)("a",{parentName:"p",href:"https://packemon.dev/"},"Packemon")," into moon."),(0,r.kt)("p",null,"Begin by installing ",(0,r.kt)("inlineCode",{parentName:"p"},"packemon")," in your root. We suggest using the same version across the entire\nrepository."),(0,r.kt)(s.Z,{dep:"packemon",dev:!0,mdxType:"AddDepsTabs"}),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("p",null,"Package building does not apply to every project, only packages, so where you place the build task\nis up to you. The following patterns are suggested:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A ",(0,r.kt)("inlineCode",{parentName:"li"},"buildPackage")," task in ",(0,r.kt)("a",{parentName:"li",href:"../../config/global-project"},(0,r.kt)("inlineCode",{parentName:"a"},".moon/project.yml")),", which can be\ninherited by package based projects."),(0,r.kt)("li",{parentName:"ul"},"A ",(0,r.kt)("inlineCode",{parentName:"li"},"build")," task in each ",(0,r.kt)("a",{parentName:"li",href:"../../config/project"},(0,r.kt)("inlineCode",{parentName:"a"},"project.yml")),".")),(0,r.kt)(o.Z,{groupId:"config-type",defaultValue:"global",values:[{label:"Globally inherited",value:"global"},{label:"Per project",value:"local"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"global",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/project.yml"',title:'".moon/project.yml"'},"buildPackage:\n    command: 'packemon'\n    args:\n        - 'pack'\n        # Add `engines` field to package\n        - '--addEngines'\n        # Add `exports` field to package\n        - '--addExports'\n        # Generate TypeScript declarations\n        - '--declaration'\n        - '--declarationConfig'\n        - 'tsconfig.build.json'\n    inputs:\n        # Source files only\n        - 'src/**/*'\n        - 'package.json'\n        # A build specific tsconfig\n        - 'tsconfig.build.json'\n        - '/tsconfig.options.json'\n    outputs:\n        # Matches `compilerOptions.outDir`\n        - 'dts'\n    env:\n        NODE_ENV: 'production'\n")),(0,r.kt)("p",null,"With this being defined globally, all package-based projects can inherit this task and rename it as\nfollows."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="<package>/project.yml"',title:'"<package>/project.yml"'},"# Rename the `buildPackage` task to `build` for this project\nworkspace:\n    inheritedTasks:\n        rename:\n            buildPackage: 'build'\n\n# Define additional compiled files unique to this project\ntasks:\n    build:\n        outputs:\n            - 'cjs'\n")),(0,r.kt)("p",null,"However, for other project types like applications, this task will need to be ",(0,r.kt)("em",{parentName:"p"},"excluded"),", otherwise\nit will run and fail in CI."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="<app>/project.yml"',title:'"<app>/project.yml"'},"# Exclude the `buildPackage` task for this project\nworkspace:\n    inheritedTasks:\n        exclude: ['buildPackage']\n"))),(0,r.kt)(i.Z,{value:"local",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="<package>/project.yml"',title:'"<package>/project.yml"'},"build:\n    command: 'packemon'\n    args:\n        - 'pack'\n        # Add `engines` field to package\n        - '--addEngines'\n        # Add `exports` field to package\n        - '--addExports'\n        # Generate TypeScript declarations\n        - '--declaration'\n        - '--declarationConfig'\n        - 'tsconfig.build.json'\n    inputs:\n        # Source files only\n        - 'src/**/*'\n        - 'package.json'\n        # A build specific tsconfig\n        - 'tsconfig.build.json'\n        - '/tsconfig.options.json'\n    outputs:\n        # Compiled files: lib, esm, cjs, mjs, etc\n        - 'lib'\n        # Matches `compilerOptions.outDir`\n        - 'dts'\n    env:\n        NODE_ENV: 'production'\n")))),(0,r.kt)("h3",{id:"typescript-integration"},"TypeScript integration"),(0,r.kt)("p",null,"Packemon has built-in support for TypeScript, but to ",(0,r.kt)("em",{parentName:"p"},"not")," conflict with a\n",(0,r.kt)("a",{parentName:"p",href:"./typescript"},"typecheck task"),", a separate ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," file is required, which we named\n",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.build.json"),"."),(0,r.kt)("p",null,"This config is necessary to ",(0,r.kt)("em",{parentName:"p"},"only")," compile source files, and to not include unwanted files in the\ndeclaration output directory (",(0,r.kt)("inlineCode",{parentName:"p"},"dts"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="tsconfig.build.json"',title:'"tsconfig.build.json"'},'{\n    "extends": "../../tsconfig.options.json",\n    "compilerOptions": {\n        "outDir": "dts",\n        "rootDir": "src"\n    },\n    "include": ["src/**/*"],\n    "references": []\n}\n')),(0,r.kt)("h3",{id:"build-targets"},"Build targets"),(0,r.kt)("p",null,"To configure the target platform(s) and format(s), you must define a\n",(0,r.kt)("a",{parentName:"p",href:"https://packemon.dev/docs/config"},(0,r.kt)("inlineCode",{parentName:"a"},"packemon")," block")," in the project's ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),". The chosen\nformats must also be listed as ",(0,r.kt)("inlineCode",{parentName:"p"},"outputs")," in the task."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n    "name": "package",\n    // ...\n    "packemon": {\n        "format": "esm",\n        "platform": "browser"\n    }\n}\n')))}f.isMDXComponent=!0}}]);