"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[75847],{35318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),g=r,d=u["".concat(l,".").concat(g)]||u[g]||m[g]||o;return n?a.createElement(d,i(i({ref:t},c),{},{components:n})):a.createElement(d,i({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1480:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(25773),r=(n(27378),n(35318));const o={slug:"moon-v1.2",title:"moon v1.2 - Tag based task inheritance",authors:["milesj"],tags:["tags","tasks"],image:"./img/moon/v1.2.png"},i=void 0,s={permalink:"/blog/moon-v1.2",editUrl:"https://github.com/moonrepo/moon/tree/master/website/blog/2023-04-17_moon-v1.2.mdx",source:"@site/blog/2023-04-17_moon-v1.2.mdx",title:"moon v1.2 - Tag based task inheritance",description:"In this small release, we're improving our task inheritance and performance.",date:"2023-04-17T00:00:00.000Z",formattedDate:"April 17, 2023",tags:[{label:"tags",permalink:"/blog/tags/tags"},{label:"tasks",permalink:"/blog/tags/tasks"}],readingTime:1.265,hasTruncateMarker:!0,authors:[{name:"Miles Johnson",title:"Founder, developer",url:"https://github.com/milesj",imageURL:"/img/authors/miles.jpg",key:"milesj"}],frontMatter:{slug:"moon-v1.2",title:"moon v1.2 - Tag based task inheritance",authors:["milesj"],tags:["tags","tasks"],image:"./img/moon/v1.2.png"},prevItem:{title:"proto v0.7 - First step towards plugins",permalink:"/blog/proto-v0.7"},nextItem:{title:"proto v0.6 - Unused cleaning and improved global binaries",permalink:"/blog/proto-v0.6"}},l={image:n(9557).Z,authorsImageUrls:[void 0]},p=[{value:"Task inheritance based on project tags",id:"task-inheritance-based-on-project-tags",level:2},{value:"Other changes",id:"other-changes",level:2}],c={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In this small release, we're improving our task inheritance and performance."),(0,r.kt)("h2",{id:"task-inheritance-based-on-project-tags"},"Task inheritance based on project tags"),(0,r.kt)("p",null,"In v0.23 we introduced ",(0,r.kt)("a",{parentName:"p",href:"/blog/v0.23#improved-task-inheritance-model"},"scoped task inheritance")," by\nproject type/language, and in v1.0 we introduced ",(0,r.kt)("a",{parentName:"p",href:"/blog/moon-v1.0#project-tagging"},"project tagging"),",\nbut what if we combined both of these features? In this release, you can now define workspace-level\ntasks ",(0,r.kt)("em",{parentName:"p"},"by tag")," that'll be inherited by all projects with that tag."),(0,r.kt)("p",null,"To demonstrate this, say you have a monorepo composed of multiple ",(0,r.kt)("a",{parentName:"p",href:"https://astro.build"},"Astro"),"\napplications, each duplicating the same Astro tasks. Instead of duplicating, define an ",(0,r.kt)("inlineCode",{parentName:"p"},"astro")," tag\nin each project's ",(0,r.kt)("a",{parentName:"p",href:"/docs/config/project#tags"},(0,r.kt)("inlineCode",{parentName:"a"},"moon.yml")),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="<project>/moon.yml"',title:'"<project>/moon.yml"'},"language: 'typescript'\ntype: 'application'\ntags: ['astro']\n")),(0,r.kt)("p",null,"And then create a new tasks configuration at ",(0,r.kt)("inlineCode",{parentName:"p"},".moon/tasks/tag-astro.yml")," with the following\ncontents:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/tasks/tag-astro.yml"',title:'".moon/tasks/tag-astro.yml"'},"fileGroups:\n    astro:\n        - 'public/**/*'\n        - 'src/**/*'\n        - 'astro.config.*'\n        - 'tsconfig.json'\n\ntasks:\n    astro:\n        command: 'astro'\n        local: true\n\n    # Development server\n    dev:\n        command: 'astro dev'\n        local: true\n\n    # Production build\n    build:\n        command: 'astro build'\n        inputs: ['@group(astro)']\n        outputs: ['dist']\n\n    # Check .astro files\n    check:\n        command: 'astro check'\n        inputs: ['@group(astro)']\n        deps: ['typecheck']\n\n    # Preview production build locally\n    preview:\n        command: 'astro preview'\n        deps: ['build']\n        local: true\n")),(0,r.kt)("p",null,"Each of these Astro applications will now inherit all 5 tasks and the file group automatically! This\nhelps to greatly reduce maintenance overhead and help enforce consistency across projects. Jump to\nthe official ",(0,r.kt)("a",{parentName:"p",href:"/docs/concepts/task-inheritance"},"task inheritance docs")," for more information on tag\nbased inheritance."),(0,r.kt)("h2",{id:"other-changes"},"Other changes"),(0,r.kt)("p",null,"View the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moonrepo/moon/releases/tag/v1.2.0"},"official release")," for a full list of\nchanges."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Upgraded to proto v0.6."),(0,r.kt)("li",{parentName:"ul"},"Improvements to file system operations."),(0,r.kt)("li",{parentName:"ul"},"Minor improvements to performance.")))}m.isMDXComponent=!0},9557:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/v1.2-bfa019f686325c7aa62d923dce3d92d3.png"}}]);