"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6759],{35318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),p=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,m=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,f=d["".concat(m,".").concat(u)]||d[u]||s[u]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},98197:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(25773),a=(n(27378),n(35318));const o={title:"generate"},i=void 0,l={unversionedId:"commands/generate",id:"commands/generate",title:"generate",description:"The moon generate  (or moon g) command will generate code (files and folders) from a",source:"@site/docs/commands/generate.mdx",sourceDirName:"commands",slug:"/commands/generate",permalink:"/docs/commands/generate",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/commands/generate.mdx",tags:[],version:"current",frontMatter:{title:"generate"},sidebar:"docs",previous:{title:"setup",permalink:"/docs/commands/docker/setup"},next:{title:"init",permalink:"/docs/commands/init"}},m={},p=[{value:"Arguments",id:"arguments",level:3},{value:"Options",id:"options",level:3}],c={toc:p};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"moon generate <name>")," (or ",(0,a.kt)("inlineCode",{parentName:"p"},"moon g"),") command will generate code (files and folders) from a\npre-defined template of the same name, using an interactive series of prompts. Templates are located\nbased on the ",(0,a.kt)("a",{parentName:"p",href:"../config/workspace#templates"},(0,a.kt)("inlineCode",{parentName:"a"},"generator.templates"))," setting."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'# Generate code from a template to a target directory\n$ moon generate npm-package ./packages/example\n\n# Generate code while declaring custom variable values\n$ moon generate npm-package ./packages/example -- --name "@company/example"\n\n# Create a new template\n$ moon generate react-app --template\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"View the official ",(0,a.kt)("a",{parentName:"p",href:"../guides/codegen"},"code generation guide")," for a more in-depth example of how to\nutilize this command.")),(0,a.kt)("h3",{id:"arguments"},"Arguments"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<name>")," - Name of the template to generate."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"[dest]")," - Destination to write files to, relative from the current working directory. If not\ndefined, will be prompted during generation."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"[-- <vars>]")," - Additional arguments to override default variable values.")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--defaults")," - Use the default value of all variables instead of prompting the user."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--dryRun")," - Run entire generator process without writing files."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--force")," - Force overwrite any existing files at the destination."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--template")," - Create a new template with the provided name.")))}s.isMDXComponent=!0}}]);