"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4825],{5318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),h=s(n),u=r,d=h["".concat(p,".").concat(u)]||h[u]||m[u]||o;return n?a.createElement(d,i(i({ref:t},c),{},{components:n})):a.createElement(d,i({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8109:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7378);function r(e){let{src:t,width:n="90%",alt:r="",title:o,align:i="center",padding:l="1rem"}=e;return a.createElement("div",{style:{marginBottom:l,marginTop:l,textAlign:i}},a.createElement("img",{src:t.default,width:n,alt:r,title:o,className:"inline-block"}))}},9619:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7378),r=n(8944),o=n(1792);const i={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function l(e){let{className:t,icon:n,text:l,variant:p}=e;return a.createElement("span",{className:(0,r.Z)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",p?i[p]:"bg-gray-100 text-gray-800",t)},n&&a.createElement(o.Z,{icon:n,className:"mr-1"}),l)}},6071:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(5773),r=(n(7378),n(5318));n(9619),n(8109);const o={slug:"v0.22",title:"moon v0.22 - New pipeline, hashing, and caching, with Turborepo migration",authors:["milesj"],tags:["graph","pipeline","hasher","migrate"],image:"./img/v0.22.png"},i=void 0,l={permalink:"/blog/v0.22",editUrl:"https://github.com/moonrepo/moon/tree/master/website/blog/2023-01-16_v0.22.mdx",source:"@site/blog/2023-01-16_v0.22.mdx",title:"moon v0.22 - New pipeline, hashing, and caching, with Turborepo migration",description:"It's the first release of the year, and with this release, we're landing some quality of life",date:"2023-01-16T00:00:00.000Z",formattedDate:"January 16, 2023",tags:[{label:"graph",permalink:"/blog/tags/graph"},{label:"pipeline",permalink:"/blog/tags/pipeline"},{label:"hasher",permalink:"/blog/tags/hasher"},{label:"migrate",permalink:"/blog/tags/migrate"}],readingTime:2.805,hasTruncateMarker:!0,authors:[{name:"Miles Johnson",title:"Founder, developer",url:"https://github.com/milesj",imageURL:"https://pbs.twimg.com/profile_images/1532262885648281601/TQbEOiNd_400x400.jpg",key:"milesj"}],frontMatter:{slug:"v0.22",title:"moon v0.22 - New pipeline, hashing, and caching, with Turborepo migration",authors:["milesj"],tags:["graph","pipeline","hasher","migrate"],image:"./img/v0.22.png"},nextItem:{title:"What's in store for 2023",permalink:"/blog/2023-roadmap"}},p={image:n(288).Z,authorsImageUrls:[void 0]},s=[{value:"New action pipeline",id:"new-action-pipeline",level:2},{value:"Expanded hashing functionality",id:"expanded-hashing-functionality",level:2},{value:"Project graph is now cached",id:"project-graph-is-now-cached",level:2},{value:"Migrate from Turborepo",id:"migrate-from-turborepo",level:2},{value:"Breaking changes",id:"breaking-changes",level:2},{value:"Renamed events",id:"renamed-events",level:3},{value:"Updated CLI options",id:"updated-cli-options",level:3},{value:"Other changes",id:"other-changes",level:2},{value:"What&#39;s next?",id:"whats-next",level:2}],c={toc:s};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"It's the first release of the year, and with this release, we're landing some quality of life\ninfrastructure and workflow improvements!"),(0,r.kt)("h2",{id:"new-action-pipeline"},"New action pipeline"),(0,r.kt)("p",null,'When running targets, we generate a graph of actions to execute in order within the action runner.\nAn action is one of "setup toolchain", "install dependencies", "run target", so on and so forth. Our\naction runner would then spawn threads for every action using the ',(0,r.kt)("a",{parentName:"p",href:"https://tokio.rs/"},"Tokio"),"\nruntime. While this worked great, concurrency was entirely abstracted away from us."),(0,r.kt)("p",null,"To mitigate this problem, we've implemented a new system for executing actions known as the action\npipeline (or simply pipeline), which implements a dynamically scaling thread pool on top of Tokio.\nThis provides us with more control over concurrency, starting with the new ",(0,r.kt)("inlineCode",{parentName:"p"},"--concurrency")," option,\nwhich restricts the number of threads (or CPU cores)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ moon run :build --concurrency 2\n")),(0,r.kt)("h2",{id:"expanded-hashing-functionality"},"Expanded hashing functionality"),(0,r.kt)("p",null,"When we run targets in the pipeline, we hash a collection of inputs to calculate whether to continue\nrunning or to exit early. This functionality has been extremely beneficial for optimizing the\npipeline, and so, we've expanded the hasher for other use cases. To start, the following 2 workflows\nnow utilize the hasher:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"When determining to auto-install dependencies (",(0,r.kt)("inlineCode",{parentName:"li"},"npm install"),", etc), we now hash all production,\ndevelopment, and peer dependencies from applicable manifests (",(0,r.kt)("inlineCode",{parentName:"li"},"package.json"),"). This has resulted\nin more accurate installs, as we're no longer inadvertently installing when a non-dependency field\nis modified in a manifest. On top of this, will still take into account lockfile modified\ntimestamps."),(0,r.kt)("li",{parentName:"ul"},"When generating the project graph, we now hash all sources, aliases, and configuration files, to\ndetermine whether to load the project graph from the local cache.")),(0,r.kt)("h2",{id:"project-graph-is-now-cached"},"Project graph is now cached"),(0,r.kt)("p",null,"Because of the hashing improvements above, we're now able to cache the entirety of the project graph\ninto local cache. Depending on how many projects are in your workspace, you may see performance\nimprovements on subsequent runs as we're no longer re-building the project graph over and over\neverytime the ",(0,r.kt)("inlineCode",{parentName:"p"},"moon")," binary is ran."),(0,r.kt)("h2",{id:"migrate-from-turborepo"},"Migrate from Turborepo"),(0,r.kt)("p",null,"Turborepo is a popular task runner for Node.js based monorepos, but doesn't support all the\nfunctionality that moon does. If you're looking to prototype moon, or migrate from Turborepo to moon\nholistically, we now support a new command\n",(0,r.kt)("a",{parentName:"p",href:"/docs/commands/migrate/from-turborepo"},(0,r.kt)("inlineCode",{parentName:"a"},"moon migrate from-turborepo")),"."),(0,r.kt)("p",null,"This command will migrate the ",(0,r.kt)("inlineCode",{parentName:"p"},"turbo.json")," file to moon applicable configuration files!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ moon migrate from-turborepo\n")),(0,r.kt)("h2",{id:"breaking-changes"},"Breaking changes"),(0,r.kt)("h3",{id:"renamed-events"},"Renamed events"),(0,r.kt)("p",null,"Because of the runner -> pipeline changes above, the ",(0,r.kt)("inlineCode",{parentName:"p"},"runner.*")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/webhooks"},"webhook"),"\nevents were renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"pipeline.*"),"."),(0,r.kt)("h3",{id:"updated-cli-options"},"Updated CLI options"),(0,r.kt)("p",null,"Renamed the ",(0,r.kt)("inlineCode",{parentName:"p"},"--upstream")," option to ",(0,r.kt)("inlineCode",{parentName:"p"},"--remote"),", to better align with git terminology, and removed the\n",(0,r.kt)("inlineCode",{parentName:"p"},"--report")," option from ",(0,r.kt)("inlineCode",{parentName:"p"},"moon check")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"moon run")," commands. Reports are now always created."),(0,r.kt)("h2",{id:"other-changes"},"Other changes"),(0,r.kt)("p",null,"View the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moonrepo/moon/releases/tag/%40moonrepo%2Fcli%400.22.0"},"official release")," for a\nfull list of changes."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added Bun as a Tier 1 language (doesn't do much at the moment)."),(0,r.kt)("li",{parentName:"ul"},"Added a ",(0,r.kt)("a",{parentName:"li",href:"/docs/config/workspace#versionconstraint"},(0,r.kt)("inlineCode",{parentName:"a"},"versionConstraint")," setting")," in\n",(0,r.kt)("inlineCode",{parentName:"li"},".moon/workspace.yml")," that enforces a requirement on the running moon binary."),(0,r.kt)("li",{parentName:"ul"},"Updated the ",(0,r.kt)("a",{parentName:"li",href:"/docs/config/project#project"},(0,r.kt)("inlineCode",{parentName:"a"},"project")," fields")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"moon.yml")," to be optional,\nexcluding ",(0,r.kt)("inlineCode",{parentName:"li"},"description"),"."),(0,r.kt)("li",{parentName:"ul"},"Internal improvements to remote caching and artifact uploading.")),(0,r.kt)("h2",{id:"whats-next"},"What's next?"),(0,r.kt)("p",null,"Expect the following in the v0.23 release!"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Improved task inheritance workflow."),(0,r.kt)("li",{parentName:"ul"},"Glob support in task ",(0,r.kt)("inlineCode",{parentName:"li"},"outputs"),"."),(0,r.kt)("li",{parentName:"ul"},"Project-level environment variables.")))}m.isMDXComponent=!0},288:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/v0.22-6d47d46b82e88207cd599d1bd3974022.png"}}]);