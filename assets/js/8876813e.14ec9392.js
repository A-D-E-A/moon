"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2615],{26675:(e,t,n)=>{n.d(t,{A:()=>l});var a=n(35315),o=n.n(a),r=n(58406),i=n.n(r);function l(e,t){return o()({container:e,elements:t,layout:{fit:!0,name:"dagre",nodeDimensionsIncludeLabels:!0,spacingFactor:1},style:[{selector:"edges",style:{"arrow-scale":2,"curve-style":"straight","line-cap":"round","line-color":"#c9eef6","line-opacity":.25,"overlay-color":"#c9eef6","target-arrow-color":"#c9eef6","target-arrow-shape":"tee",width:3}},{selector:"node",style:{"background-fill":"linear-gradient","background-gradient-direction":"to-bottom-right","background-gradient-stop-colors":"#d7dfe9 #bdc9db #97a1af",color:"#fff",height:60,label:"data(label)","overlay-color":"#99aab7","overlay-shape":"ellipse",padding:0,shape:"ellipse","text-halign":"center","text-margin-y":6,"text-valign":"bottom","underlay-shape":"ellipse",width:60}},{selector:'node[type="run-target"], node[type="sm"]',style:{"background-gradient-stop-colors":"#6e58d1 #4a2ec6 #3b259e"}},{selector:'node[type="sync-project"], node[type="md"]',style:{"background-gradient-stop-colors":"#ffafff #ff79ff #cc61cc",height:80,width:80}},{selector:'node[type="install-deps"], node[type="lg"]',style:{"background-gradient-stop-colors":"#afe6f2 #79d5e9 #61aaba",height:100,width:100}},{selector:'node[type="setup-tool"], node[type="xl"]',style:{"background-gradient-stop-colors":"#ff9da6 #ff5b6b #cc4956",height:120,width:120}}]})}o().use(i())},17242:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>p,metadata:()=>c,toc:()=>h});var a=n(25773),o=n(27378),r=n(35318),i=n(26675);function l(){const e=(0,o.useRef)(null);return(0,o.useEffect)((()=>{e.current&&(0,i.A)(e.current,{edges:[{data:{source:"app-client",target:"lib-components"}},{data:{source:"app-client",target:"lib-utils"}},{data:{source:"app-client",target:"lib-intl"}},{data:{source:"app-server",target:"lib-utils"}},{data:{source:"app-server",target:"lib-intl"}},{data:{source:"lib-components",target:"lib-intl"}},{data:{source:"lib-components",target:"lib-theme"}},{data:{source:"lib-components",target:"lib-utils"}}],nodes:[{data:{id:"app-client",label:"Client app",type:"xl"}},{data:{id:"app-server",label:"Server app",type:"xl"}},{data:{id:"lib-components",label:"Components",type:"lg"}},{data:{id:"lib-utils",label:"Utils",type:"lg"}},{data:{id:"lib-theme",label:"Theme",type:"lg"}},{data:{id:"lib-intl",label:"Intl",type:"lg"}}]})}),[]),o.createElement("div",{id:"project-graph",ref:e,className:"p-1 mb-2 rounded bg-slate-800",style:{height:"450px",width:"100%"}})}const p={title:"Project graph"},s=void 0,c={unversionedId:"how-it-works/project-graph",id:"how-it-works/project-graph",title:"Project graph",description:"The project graph is a representation of all configured",source:"@site/docs/how-it-works/project-graph.mdx",sourceDirName:"how-it-works",slug:"/how-it-works/project-graph",permalink:"/docs/how-it-works/project-graph",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/how-it-works/project-graph.mdx",tags:[],version:"current",frontMatter:{title:"Project graph"},sidebar:"docs",previous:{title:"Languages",permalink:"/docs/how-it-works/languages"},next:{title:"Dependency graph",permalink:"/docs/how-it-works/dep-graph"}},d={},h=[{value:"Relationships",id:"relationships",level:2},{value:"Explicit",id:"explicit",level:3},{value:"Implicit",id:"implicit",level:3},{value:"Scopes",id:"scopes",level:3},{value:"What is the graph used for?",id:"what-is-the-graph-used-for",level:2}],u={toc:h};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The project graph is a representation of all configured\n",(0,r.kt)("a",{parentName:"p",href:"../config/workspace#projects"},"projects in the workspace")," and their relationships between each\nother, and is represented internally as a directed acyclic graph (DAG). Below is a visual\nrepresentation of a project graph, composed of multiple applications and libraries, where both\nproject types depend on libraries."),(0,r.kt)(l,{mdxType:"ProjectGraph"}),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("a",{parentName:"p",href:"../commands/project-graph"},(0,r.kt)("inlineCode",{parentName:"a"},"moon project-graph"))," command can be used to view the structure of\nyour workspace.")),(0,r.kt)("h2",{id:"relationships"},"Relationships"),(0,r.kt)("p",null,"A relationship is between a dependent (the parent project) and a dependency/requirement (a child\nproject). Relationships are derived from source code and configuration files within the repository,\nand fall into 1 of 2 categories:"),(0,r.kt)("h3",{id:"explicit"},"Explicit"),(0,r.kt)("p",null,"These are dependencies that are explicitly defined in a project's ",(0,r.kt)("a",{parentName:"p",href:"../config/project"},(0,r.kt)("inlineCode",{parentName:"a"},"moon.yml")),"\nconfig file, using the ",(0,r.kt)("a",{parentName:"p",href:"../config/project#dependson"},(0,r.kt)("inlineCode",{parentName:"a"},"dependsOn"))," setting."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="moon.yml"',title:'"moon.yml"'},"dependsOn:\n  - 'components'\n  - id: 'utils'\n    scope: 'peer'\n")),(0,r.kt)("h3",{id:"implicit"},"Implicit"),(0,r.kt)("p",null,"These are dependencies that are implicitly discovered by moon when scanning the repository. How an\nimplicit dependency is discovered is based on a\n",(0,r.kt)("a",{parentName:"p",href:"./languages#tier-2--platform"},"language's platform integration"),", and how that language's ecosystem\nfunctions."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  // ...\n  "dependencies": {\n    "@company/components": "workspace:*"\n  },\n  "peerDependencies": {\n    "@company/utils": "workspace:*"\n  }\n}\n')),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"If a language is not officially supported by moon, then implicit dependencies will ",(0,r.kt)("em",{parentName:"p"},"not")," be\nresolved. For unsupported languages, you must explicitly configure dependencies.")),(0,r.kt)("h3",{id:"scopes"},"Scopes"),(0,r.kt)("p",null,"Every relationship is categorized into a scope that describes the type of relationship between the\nparent and child. Scopes are currently used for ",(0,r.kt)("a",{parentName:"p",href:"../commands/sync"},"project syncing")," and deep Docker\nintegration."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Production")," - Dependency is required in production, ",(0,r.kt)("em",{parentName:"li"},"will not be")," pruned in production\nenvironments, and will sync as a production dependency."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Development")," - Dependency is required in development and production, ",(0,r.kt)("em",{parentName:"li"},"will be")," pruned from\nproduction environments, and will sync as a development-only dependency."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Peer")," - Dependency is a peer requirement, with language specific semantics. Will sync as a peer\ndependency when applicable.")),(0,r.kt)("h2",{id:"what-is-the-graph-used-for"},"What is the graph used for?"),(0,r.kt)("p",null,"Great question, the project graph is used throughout the codebase to accomplish a variety of\nfunctions, but mainly:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Is fed into the ",(0,r.kt)("a",{parentName:"li",href:"./dep-graph"},"dependency graph")," to determine relationships of tasks between other\ntasks, and across projects."),(0,r.kt)("li",{parentName:"ul"},"Powers our ",(0,r.kt)("a",{parentName:"li",href:"../guides/docker"},"Docker")," layer caching and scaffolding implementations."),(0,r.kt)("li",{parentName:"ul"},"Utilized for ",(0,r.kt)("a",{parentName:"li",href:"../commands/sync"},"project syncing")," to ensure a healthy repository state."),(0,r.kt)("li",{parentName:"ul"},"Determines affected projects in ",(0,r.kt)("a",{parentName:"li",href:"../guides/ci"},"continuous integration")," workflows.")))}m.isMDXComponent=!0}}]);