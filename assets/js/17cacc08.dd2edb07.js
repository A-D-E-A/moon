"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8893],{5318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,k=d["".concat(s,".").concat(u)]||d[u]||m[u]||i;return n?a.createElement(k,o(o({ref:t},c),{},{components:n})):a.createElement(k,o({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9798:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7378),r=n(8944);const i="tabItem_wHwb";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:n},t)}},3337:(e,t,n)=>{n.d(t,{Z:()=>u});var a=n(5773),r=n(7378),i=n(8944),o=n(6457),l=n(784),s=n(9947),p=n(3457);const c="tabList_J5MA",m="tabItem_l0OV";function d(e){var t;const{lazy:n,block:o,defaultValue:d,values:u,groupId:k,className:h}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=u??g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),y=(0,l.l)(f,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===d?d:d??(null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)??g[0].props.value;if(null!==v&&!f.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:w}=(0,s.U)(),[N,C]=(0,r.useState)(v),x=[],{blockElementScrollPositionUntilNextRender:T}=(0,p.o5)();if(null!=k){const e=b[k];null!=e&&e!==N&&f.some((t=>t.value===e))&&C(e)}const j=e=>{const t=e.currentTarget,n=x.indexOf(t),a=f[n].value;a!==N&&(T(t),C(a),null!=k&&w(k,String(a)))},L=e=>{var t;let n=null;switch(e.key){case"Enter":j(e);break;case"ArrowRight":{const t=x.indexOf(e.currentTarget)+1;n=x[t]??x[0];break}case"ArrowLeft":{const t=x.indexOf(e.currentTarget)-1;n=x[t]??x[x.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":o},h)},f.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>x.push(e),onKeyDown:L,onClick:j},o,{className:(0,i.Z)("tabs__item",m,null==o?void 0:o.className,{"tabs__item--active":N===t})}),n??t)}))),n?(0,r.cloneElement)(g.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function u(e){const t=(0,o.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},2189:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7378),r=n(3469),i=n(1792);function o(e){let{to:t}=e;return a.createElement("a",{href:t,target:"_blank",className:"float-right inline-block",style:{marginTop:"-3em"}},a.createElement(i.Z,{icon:r.dT$}))}},9785:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7378),r=n(9619);function i(e){let{text:t="Required"}=e;return a.createElement(r.Z,{text:t,variant:"failure",className:"ml-2"})}},9022:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7378),r=n(9619);function i(e){let{header:t,updated:n,version:i}=e;return a.createElement(r.Z,{text:`v${i}`,variant:n?"success":"info",className:t?"absolute right-0 top-1.5":"ml-2"})}},9619:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7378),r=n(8944),i=n(1792);const o={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function l(e){let{className:t,icon:n,text:l,variant:s}=e;return a.createElement("span",{className:(0,r.Z)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",s?o[s]:"bg-gray-100 text-gray-800",t)},n&&a.createElement(i.Z,{icon:n,className:"mr-1"}),l)}},8137:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>k,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var a=n(5773),r=(n(7378),n(5318)),i=(n(3337),n(9798),n(2189)),o=n(9785),l=n(9022);const s={title:".moon/workspace.yml",toc_max_heading_level:6},p=void 0,c={unversionedId:"config/workspace",id:"config/workspace",title:".moon/workspace.yml",description:"The .moon/workspace.yml file configures projects and services in the workspace.",source:"@site/docs/config/workspace.mdx",sourceDirName:"config",slug:"/config/workspace",permalink:"/docs/config/workspace",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/config/workspace.mdx",tags:[],version:"current",frontMatter:{title:".moon/workspace.yml",toc_max_heading_level:6},sidebar:"docs",previous:{title:"Config files",permalink:"/docs/config"},next:{title:".moon/toolchain.yml",permalink:"/docs/config/toolchain"}},m={},d=[{value:'<code>extends</code><VersionLabel version="0.4" />',id:"extends",level:2},{value:"<code>projects</code><RequiredLabel />",id:"projects",level:2},{value:"Using a map",id:"using-a-map",level:3},{value:"Using globs",id:"using-globs",level:3},{value:'Using a map <em>and</em> globs<VersionLabel version="0.18" />',id:"using-a-map-and-globs",level:3},{value:'<code>generator</code><VersionLabel version="0.14" />',id:"generator",level:2},{value:"<code>templates</code>",id:"templates",level:3},{value:'<code>hasher</code><VersionLabel version="0.13" />',id:"hasher",level:2},{value:"<code>optimization</code>",id:"optimization",level:3},{value:'<code>notifier</code><VersionLabel version="0.17" />',id:"notifier",level:2},{value:"<code>webhookUrl</code>",id:"webhookurl",level:3},{value:'<code>runner</code><VersionLabel updated version="0.13" />',id:"runner",level:2},{value:'<code>cacheLifetime</code><VersionLabel version="0.11" />',id:"cachelifetime",level:3},{value:'<code>archivableTargets</code><VersionLabel version="0.20" />',id:"archivabletargets",level:3},{value:'<code>implicitDeps</code><VersionLabel version="0.16" />',id:"implicitdeps",level:3},{value:'<code>implicitInputs</code><VersionLabel version="0.9" />',id:"implicitinputs",level:3},{value:'<code>inheritColorsForPipedTasks</code><VersionLabel version="0.3" />',id:"inheritcolorsforpipedtasks",level:3},{value:'<code>logRunningCommand</code><VersionLabel version="0.4" />',id:"logrunningcommand",level:3},{value:"<code>vcs</code>",id:"vcs",level:2},{value:"<code>defaultBranch</code>",id:"defaultbranch",level:3},{value:"<code>manager</code>",id:"manager",level:3},{value:'<code>remoteCandidates</code> <VersionLabel version="0.20" />',id:"remotecandidates-",level:3}],u={toc:d};function k(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".moon/workspace.yml")," file configures projects and services in the workspace."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml"',title:'".moon/workspace.yml"'},"$schema: 'https://moonrepo.dev/schemas/workspace.json'\n")),(0,r.kt)("h2",{id:"extends"},(0,r.kt)("inlineCode",{parentName:"h2"},"extends"),(0,r.kt)(l.Z,{version:"0.4",mdxType:"VersionLabel"})),(0,r.kt)(i.Z,{to:"/api/types/interface/WorkspaceConfig#extends",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"Defines an external ",(0,r.kt)("inlineCode",{parentName:"p"},".moon/workspace.yml")," to extend and inherit settings from. Perfect for\nreusability and sharing configuration across repositories and projects. When defined, this setting\nmust be an HTTPS URL ",(0,r.kt)("em",{parentName:"p"},"or")," relative file system path that points to a valid YAML document!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml" {1}',title:'".moon/workspace.yml"',"{1}":!0},"extends: 'https://raw.githubusercontent.com/organization/repository/master/.moon/workspace.yml'\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Settings will be merged recursively for blocks, with values defined in the local configuration\ntaking precedence over those defined in the extended configuration. However, the ",(0,r.kt)("inlineCode",{parentName:"p"},"projects")," setting\n",(0,r.kt)("em",{parentName:"p"},"does not merge"),"!")),(0,r.kt)("h2",{id:"projects"},(0,r.kt)("inlineCode",{parentName:"h2"},"projects"),(0,r.kt)(o.Z,{mdxType:"RequiredLabel"})),(0,r.kt)(i.Z,{to:"/api/types/interface/WorkspaceConfig#projects",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"Defines the location of all ",(0,r.kt)("a",{parentName:"p",href:"../concepts/project"},"projects")," within the workspace. Supports either a\nmanual map of projects (default), a list of globs in which to automatically locate projects, ",(0,r.kt)("em",{parentName:"p"},"or"),"\nboth."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Unlike packages in the JavaScript ecosystem, a moon project ",(0,r.kt)("em",{parentName:"p"},"does not")," require a ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),",\nand is not coupled to Yarn workspaces (or similar architectures).")),(0,r.kt)("h3",{id:"using-a-map"},"Using a map"),(0,r.kt)("p",null,"When using a map, each project must be ",(0,r.kt)("em",{parentName:"p"},"manually")," configured and requires a unique\n",(0,r.kt)("a",{parentName:"p",href:"../concepts/project#names"},"name")," as the map key, where this name is used heavily on the command\nline and within the project graph for uniquely identifying the project amongst all projects. The map\nvalue (known as the project source) is a file system path to the project folder, relative from the\nworkspace root, and must be contained within the workspace boundary."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml"',title:'".moon/workspace.yml"'},"projects:\n  admin: 'apps/admin'\n  apiClients: 'packages/api-clients'\n  designSystem: 'packages/design-system'\n  web: 'apps/web'\n")),(0,r.kt)("h3",{id:"using-globs"},"Using globs"),(0,r.kt)("p",null,"If manually mapping projects is too tedious or cumbersome, you may provide a list of\n",(0,r.kt)("a",{parentName:"p",href:"../concepts/file-pattern#globs"},"globs")," to automatically locate all project folders, relative from\nthe workspace root."),(0,r.kt)("p",null,"When using this approach, the project name is derived from the project folder name, and is cleaned\nto our ",(0,r.kt)("a",{parentName:"p",href:"../concepts/project#names"},"supported characters")," . Furthermore, globbing ",(0,r.kt)("strong",{parentName:"p"},"does risk the\nchance of collision"),", and when that happens, we log a warning and skip the conflicting project from\nbeing configured in the project graph."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml"',title:'".moon/workspace.yml"'},"projects:\n  - 'apps/*'\n  - 'packages/*'\n")),(0,r.kt)("h3",{id:"using-a-map-and-globs"},"Using a map ",(0,r.kt)("em",{parentName:"h3"},"and")," globs",(0,r.kt)(l.Z,{version:"0.18",mdxType:"VersionLabel"})),(0,r.kt)("p",null,"For those situations where you want to use ",(0,r.kt)("em",{parentName:"p"},"both")," patterns, you can! The list of globs can be\ndefined under a ",(0,r.kt)("inlineCode",{parentName:"p"},"globs")," field, while the map of projects under a ",(0,r.kt)("inlineCode",{parentName:"p"},"sources")," field."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml"',title:'".moon/workspace.yml"'},"projects:\n  globs:\n    - 'apps/*'\n    - 'packages/*'\n  sources:\n    www: 'www'\n")),(0,r.kt)("h2",{id:"generator"},(0,r.kt)("inlineCode",{parentName:"h2"},"generator"),(0,r.kt)(l.Z,{version:"0.14",mdxType:"VersionLabel"})),(0,r.kt)(i.Z,{to:"/api/types/interface/WorkspaceConfig#generator",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"Configures aspects of the template generator."),(0,r.kt)("h3",{id:"templates"},(0,r.kt)("inlineCode",{parentName:"h3"},"templates")),(0,r.kt)(i.Z,{to:"/api/types/interface/GeneratorConfig#templates",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"A list of file system paths where templates can be located, relative from the workspace root.\nDefaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"./templates"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml" {2-4}',title:'".moon/workspace.yml"',"{2-4}":!0},"generator:\n  templates:\n    - './templates'\n    - './other/templates'\n")),(0,r.kt)("h2",{id:"hasher"},(0,r.kt)("inlineCode",{parentName:"h2"},"hasher"),(0,r.kt)(l.Z,{version:"0.13",mdxType:"VersionLabel"})),(0,r.kt)(i.Z,{to:"/api/types/interface/WorkspaceConfig#hasher",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"Configures aspects of smart hashing layer."),(0,r.kt)("h3",{id:"optimization"},(0,r.kt)("inlineCode",{parentName:"h3"},"optimization")),(0,r.kt)(i.Z,{to:"/api/types/interface/HasherConfig#optimization",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"Determines the optimization level to utilize when hashing content before running targets."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"accuracy")," (default) - When hashing dependency versions, utilize the resolved value in the\nlockfile. This requires parsing the lockfile, which may reduce performance."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"performance")," - When hashing dependency versions, utilize the value defined in the manifest. This\nis typically a version range or requirement.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml" {2}',title:'".moon/workspace.yml"',"{2}":!0},"hasher:\n  optimization: 'performance'\n")),(0,r.kt)("h2",{id:"notifier"},(0,r.kt)("inlineCode",{parentName:"h2"},"notifier"),(0,r.kt)(l.Z,{version:"0.17",mdxType:"VersionLabel"})),(0,r.kt)(i.Z,{to:"/api/types/interface/WorkspaceConfig#notifier",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"Configures how moon notifies and interacts with a developer or an external system."),(0,r.kt)("h3",{id:"webhookurl"},(0,r.kt)("inlineCode",{parentName:"h3"},"webhookUrl")),(0,r.kt)(i.Z,{to:"/api/types/interface/NotifierConfig#webhookUrl",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"Defines an HTTPS URL that all pipeline events will be posted to. View the\n",(0,r.kt)("a",{parentName:"p",href:"../guides/webhooks"},"webhooks guide for more information")," on available events."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml" {2}',title:'".moon/workspace.yml"',"{2}":!0},"notifier:\n  webhookUrl: 'https://api.company.com/some/endpoint'\n")),(0,r.kt)("h2",{id:"runner"},(0,r.kt)("inlineCode",{parentName:"h2"},"runner"),(0,r.kt)(l.Z,{updated:!0,version:"0.13",mdxType:"VersionLabel"})),(0,r.kt)(i.Z,{to:"/api/types/interface/WorkspaceConfig#runner",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"Configures aspects of the action runner."),(0,r.kt)("h3",{id:"cachelifetime"},(0,r.kt)("inlineCode",{parentName:"h3"},"cacheLifetime"),(0,r.kt)(l.Z,{version:"0.11",mdxType:"VersionLabel"})),(0,r.kt)(i.Z,{to:"/api/types/interface/RunnerConfig#cacheLifetime",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,'The maximum lifetime of cached artifacts before they\'re marked as stale and automatically removed by\nthe action runner. Defaults to "7 days". This field requires an integer and a timeframe unit that\ncan be ',(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/humantime/2.1.0/humantime/fn.parse_duration.html"},"parsed as a duration"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml" {2}',title:'".moon/workspace.yml"',"{2}":!0},"runner:\n  cacheLifetime: '24 hours'\n")),(0,r.kt)("h3",{id:"archivabletargets"},(0,r.kt)("inlineCode",{parentName:"h3"},"archivableTargets"),(0,r.kt)(l.Z,{version:"0.20",mdxType:"VersionLabel"})),(0,r.kt)(i.Z,{to:"/api/types/interface/RunnerConfig#archivableTargets",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"Defines a list of ",(0,r.kt)("a",{parentName:"p",href:"../concepts/target"},"targets"),", with or without a project scope, that will be\ncached and archived within the runner. Tasks that produce ",(0,r.kt)("a",{parentName:"p",href:"./project#outputs"},"outputs")," are\nautomatically archived, and do not need to be defined here. Defaults to an empty list."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml" {2-4}',title:'".moon/workspace.yml"',"{2-4}":!0},"runner:\n  archivableTargets:\n    - ':test'\n    - 'app:typecheck'\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This setting primarily exists for ",(0,r.kt)("a",{parentName:"p",href:"../guides/remote-cache"},"remote caching")," as it will create and\npersist tar archives located in ",(0,r.kt)("inlineCode",{parentName:"p"},".moon/cache/outputs"),".")),(0,r.kt)("h3",{id:"implicitdeps"},(0,r.kt)("inlineCode",{parentName:"h3"},"implicitDeps"),(0,r.kt)(l.Z,{version:"0.16",mdxType:"VersionLabel"})),(0,r.kt)(i.Z,{to:"/api/types/interface/RunnerConfig#implicitDeps",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"Defines task ",(0,r.kt)("a",{parentName:"p",href:"./project#deps"},(0,r.kt)("inlineCode",{parentName:"a"},"deps"))," that are implicitly inherited by ",(0,r.kt)("em",{parentName:"p"},"all")," tasks within the\nworkspace. This is extremely useful for pre-building projects that are used extensively throughout\nthe repo, or always building project dependencies. Defaults to an empty list."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml" {2-5}',title:'".moon/workspace.yml"',"{2-5}":!0},"runner:\n  implicitDeps:\n    - '^:build'\n")),(0,r.kt)("h3",{id:"implicitinputs"},(0,r.kt)("inlineCode",{parentName:"h3"},"implicitInputs"),(0,r.kt)(l.Z,{version:"0.9",mdxType:"VersionLabel"})),(0,r.kt)(i.Z,{to:"/api/types/interface/RunnerConfig#implicitInputs",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"Defines task ",(0,r.kt)("a",{parentName:"p",href:"./project#inputs"},(0,r.kt)("inlineCode",{parentName:"a"},"inputs"))," that are implicitly inherited by ",(0,r.kt)("em",{parentName:"p"},"all"),' tasks within the\nworkspace. This is extremely useful for the "changes to these files should always trigger a task"\nscenario.'),(0,r.kt)("p",null,"Like ",(0,r.kt)("inlineCode",{parentName:"p"},"inputs"),", file paths/globs defined here are relative from the inheriting project.\n",(0,r.kt)("a",{parentName:"p",href:"../concepts/file-pattern#project-relative"},"Project and workspace relative file patterns")," are\nsupported and encouraged."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml" {2-5}',title:'".moon/workspace.yml"',"{2-5}":!0},"runner:\n  implicitInputs:\n    - 'package.json'\n    - '/.moon/project.yml'\n    - '/.moon/toolchain.yml'\n    - '/.moon/workspace.yml'\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"When not defined, this setting defaults to the list in the example above. When this setting ",(0,r.kt)("em",{parentName:"p"},"is\ndefined"),", that list will be overwritten, so be sure to explicitly define them if you would like to\nretain that functionality.")),(0,r.kt)("h3",{id:"inheritcolorsforpipedtasks"},(0,r.kt)("inlineCode",{parentName:"h3"},"inheritColorsForPipedTasks"),(0,r.kt)(l.Z,{version:"0.3",mdxType:"VersionLabel"})),(0,r.kt)(i.Z,{to:"/api/types/interface/RunnerConfig#inheritColorsForPipedTasks",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"Force colors to be inherited from the current terminal for all tasks that are ran as a child process\nand their output is piped to the action runner. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),".\n",(0,r.kt)("a",{parentName:"p",href:"../commands/overview#colors"},"View more about color handling in moon"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml" {2}',title:'".moon/workspace.yml"',"{2}":!0},"runner:\n  inheritColorsForPipedTasks: true\n")),(0,r.kt)("h3",{id:"logrunningcommand"},(0,r.kt)("inlineCode",{parentName:"h3"},"logRunningCommand"),(0,r.kt)(l.Z,{version:"0.4",mdxType:"VersionLabel"})),(0,r.kt)(i.Z,{to:"/api/types/interface/RunnerConfig#logRunningCommand",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"When enabled, will log the task's command, resolved arguments, and working directory when a target\nis ran. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml" {2}',title:'".moon/workspace.yml"',"{2}":!0},"runner:\n  logRunningCommand: true\n")),(0,r.kt)("h2",{id:"vcs"},(0,r.kt)("inlineCode",{parentName:"h2"},"vcs")),(0,r.kt)(i.Z,{to:"/api/types/interface/WorkspaceConfig#vcs",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,"Configures the version control system to utilize within the workspace (and repository). A VCS is\nrequired for determining touched (added, modified, etc) files, calculating file hashes, computing\naffected files, and much more."),(0,r.kt)("h3",{id:"defaultbranch"},(0,r.kt)("inlineCode",{parentName:"h3"},"defaultBranch")),(0,r.kt)(i.Z,{to:"/api/types/interface/VcsConfig#defaultBranch",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,'Defines the default branch in the repository for comparing differences against. For git, this is\ntypically "master" (default) or "main". For svn, this should always be "trunk".'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml" {2}',title:'".moon/workspace.yml"',"{2}":!0},"vcs:\n  defaultBranch: 'master'\n")),(0,r.kt)("h3",{id:"manager"},(0,r.kt)("inlineCode",{parentName:"h3"},"manager")),(0,r.kt)(i.Z,{to:"/api/types/interface/VcsConfig#manager",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,'Defines the VCS tool/binary that is being used for managing the repository. Accepts "git" (default)\nor "svn" (experimental, in development).'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml" {2}',title:'".moon/workspace.yml"',"{2}":!0},"vcs:\n  manager: 'git'\n")),(0,r.kt)("h3",{id:"remotecandidates-"},(0,r.kt)("inlineCode",{parentName:"h3"},"remoteCandidates")," ",(0,r.kt)(l.Z,{version:"0.20",mdxType:"VersionLabel"})),(0,r.kt)(i.Z,{to:"/api/types/interface/VcsConfig#remoteCandidates",mdxType:"HeadingApiLink"}),(0,r.kt)("p",null,'(Git only) Defines a list of remote candidates to query agaist to determine merge bases. Defaults to\n"origin" and "upstream".'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml" {2-4}',title:'".moon/workspace.yml"',"{2-4}":!0},"vcs:\n  remoteCandidates:\n    - 'origin'\n    - 'upstream'\n")))}k.isMDXComponent=!0}}]);