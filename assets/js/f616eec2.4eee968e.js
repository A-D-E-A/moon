"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[79357],{35318:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var r=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var f=r.createContext({}),c=function(e){var t=r.useContext(f),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(f.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,f=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),h=a,p=u["".concat(f,".").concat(h)]||u[h]||d[h]||i;return n?r.createElement(p,o(o({ref:t},l),{},{components:n})):r.createElement(p,o({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var f in t)hasOwnProperty.call(t,f)&&(s[f]=t[f]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},99075:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(25773),a=(n(27378),n(35318));const i={title:"query hash-diff",sidebar_label:"hash-diff"},o=void 0,s={unversionedId:"commands/query/hash-diff",id:"commands/query/hash-diff",title:"query hash-diff",description:"Use the moon query hash-diff sub-command to query the content and source differences between 2",source:"@site/docs/commands/query/hash-diff.mdx",sourceDirName:"commands/query",slug:"/commands/query/hash-diff",permalink:"/docs/commands/query/hash-diff",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/commands/query/hash-diff.mdx",tags:[],version:"current",frontMatter:{title:"query hash-diff",sidebar_label:"hash-diff"},sidebar:"docs",previous:{title:"hash",permalink:"/docs/commands/query/hash"},next:{title:"projects",permalink:"/docs/commands/query/projects"}},f={},c=[{value:"Options",id:"options",level:3}],l={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"moon query hash-diff")," sub-command to query the content and source differences between 2\ngenerated hashes. This is extremely useful in debugging task inputs."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Diff between 2 hashes\n$ moon query hash-diff 0b55b234f1018581c45b00241d7340dc648c63e639fbafdaf85a4cd7e718fdde 2388552fee5a02062d0ef402bdc7232f0a447458b058c80ce9c3d0d4d7cfe171\n\n# Diff between 2 hashes using short form\n$ moon query hash-diff 0b55b234 2388552f\n")),(0,a.kt)("p",null,"By default, this will output the contents of a hash file (which is JSON), highlighting the\ndifferences between the left and right hashes. Lines that match will be printed in white, while the\nleft differences printed in green, and right differences printed in red. If you use ",(0,a.kt)("inlineCode",{parentName:"p"},"git diff"),", this\nwill feel familiar to you."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-diff"},'Left:  0b55b234f1018581c45b00241d7340dc648c63e639fbafdaf85a4cd7e718fdde\nRight: 2388552fee5a02062d0ef402bdc7232f0a447458b058c80ce9c3d0d4d7cfe171\n\n{\n    "command": "build",\n    "args": [\n+       "./dist"\n-       "./build"\n    ],\n    ...\n}\n')),(0,a.kt)("p",null,"The differences can also be output in JSON by passing the ",(0,a.kt)("inlineCode",{parentName:"p"},"--json")," flag. The output has the\nfollowing structure:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"{\n    left: string,\n    left_hash: string,\n    left_diffs: string[],\n    right: string,\n    right_hash: string,\n    right_diffs: string[],\n}\n")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--json")," - Display the manifest in JSON format.")))}d.isMDXComponent=!0}}]);