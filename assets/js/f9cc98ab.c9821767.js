"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8751],{35318:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,f=d["".concat(s,".").concat(u)]||d[u]||c[u]||i;return n?a.createElement(f,l(l({ref:t},m),{},{components:n})):a.createElement(f,l({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},79022:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(27378),r=n(9619);function i(e){let{header:t,inline:n,updated:i,version:l}=e;return a.createElement(r.Z,{text:`v${l}`,variant:i?"success":"info",className:t?"absolute right-0 top-1.5":n?"inline-block":"ml-2"})}},9619:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(27378),r=n(40624),i=n(31792);const l={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function o(e){let{className:t,icon:n,text:o,variant:s}=e;return a.createElement("span",{className:(0,r.Z)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",s?l[s]:"bg-gray-100 text-gray-800",t)},n&&a.createElement(i.Z,{icon:n,className:"mr-1"}),o)}},21612:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>m});var a=n(25773),r=(n(27378),n(35318)),i=n(79022);const l={title:"run"},o=void 0,s={unversionedId:"commands/run",id:"commands/run",title:"run",description:"The moon run (or moon r) command will run one or many targets and all of",source:"@site/docs/commands/run.mdx",sourceDirName:"commands",slug:"/commands/run",permalink:"/docs/commands/run",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/commands/run.mdx",tags:[],version:"current",frontMatter:{title:"run"},sidebar:"docs",previous:{title:"touched-files",permalink:"/docs/commands/query/touched-files"},next:{title:"setup",permalink:"/docs/commands/setup"}},p={},m=[{value:"Arguments",id:"arguments",level:3},{value:"Options",id:"options",level:3},{value:"Affected",id:"affected",level:4}],c={toc:m};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"moon run")," (or ",(0,r.kt)("inlineCode",{parentName:"p"},"moon r"),") command will run one or many ",(0,r.kt)("a",{parentName:"p",href:"../concepts/target"},"targets")," and all of\nits dependencies in topological order. Each run will incrementally cache each task, improving speed\nand development times... over time. View the official ",(0,r.kt)("a",{parentName:"p",href:"../run-task"},"Run a task")," and\n",(0,r.kt)("a",{parentName:"p",href:"../cheat-sheet#tasks"},"Cheat sheet")," articles for more information!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# Run `lint` in project `app`\n$ moon run app:lint\n$ moon app:lint\n\n# Run `dev` in project `client` and `server`\n$ moon run client:dev server:dev\n\n# Run `test` in all projects\n$ moon run :test\n\n# Run `test` in all projects with tag `frontend`\n$ moon run '#frontend:test'\n\n# Run `format` in closest project (`client`)\n$ cd apps/client\n$ moon run format\n\n# Run `build` in projects matching the query\n$ moon run :build --query \"language=javascript && projectType=library\"\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"How affected status is determined is highly dependent on whether the command is running locally, in\nCI, and what options are provided. The following scenarios are possible:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"When ",(0,r.kt)("inlineCode",{parentName:"li"},"--affected")," is provided, will explicitly use ",(0,r.kt)("inlineCode",{parentName:"li"},"--remote")," to determine CI or local."),(0,r.kt)("li",{parentName:"ul"},"When not provided, will use ",(0,r.kt)("inlineCode",{parentName:"li"},"git diff")," in CI, or ",(0,r.kt)("inlineCode",{parentName:"li"},"git status")," for local."),(0,r.kt)("li",{parentName:"ul"},"To bypass affected logic entirely, use ",(0,r.kt)("inlineCode",{parentName:"li"},"--force"),"."))),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"...<target>")," - ",(0,r.kt)("a",{parentName:"li",href:"../concepts/target"},"Targets")," or project relative tasks to run."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"[-- <args>]")," - Additional arguments to\n",(0,r.kt)("a",{parentName:"li",href:"../run-task#passing-arguments-to-the-underlying-command"},"pass to the underlying command"),".")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-f"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"--force")," - Force run and ignore touched files and affected status. Will not query VCS."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--dependents")," - Run downstream dependent targets (of the same task name) as well."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-i"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"--interactive")," - Run the target in an interactive mode."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--profile <type>")," - Record and ",(0,r.kt)("a",{parentName:"li",href:"../guides/profile"},"generate a profile")," for ran tasks.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Types: ",(0,r.kt)("inlineCode",{parentName:"li"},"cpu"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"heap")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--query")," - Filter projects to run targets against using\n",(0,r.kt)("a",{parentName:"li",href:"../concepts/query-lang"},"a query statement"),". ",(0,r.kt)(i.Z,{version:"1.3.0",mdxType:"VersionLabel"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-u"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"--updateCache")," - Bypass cache and force update any existing items.")),(0,r.kt)("h4",{id:"affected"},"Affected"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--affected")," - Only run target if affected by changed files, ",(0,r.kt)("em",{parentName:"li"},"otherwise")," will always run."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--remote")," - Determine affected against remote by comparing ",(0,r.kt)("inlineCode",{parentName:"li"},"HEAD")," against a base revision\n(default branch), ",(0,r.kt)("em",{parentName:"li"},"otherwise")," uses local changes.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Can control revisions with ",(0,r.kt)("inlineCode",{parentName:"li"},"MOON_BASE")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"MOON_HEAD"),"."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--status <type>")," - Filter affected based on a change status. Can be passed multiple times.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Types: ",(0,r.kt)("inlineCode",{parentName:"li"},"all")," (default), ",(0,r.kt)("inlineCode",{parentName:"li"},"added"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"deleted"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"modified"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"staged"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"unstaged"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"untracked"))))))}d.isMDXComponent=!0}}]);