"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1042],{35318:(e,t,o)=>{o.d(t,{Zo:()=>m,kt:()=>k});var n=o(27378);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},m=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),h=p(o),k=a,d=h["".concat(l,".").concat(k)]||h[k]||c[k]||i;return o?n.createElement(d,r(r({ref:t},m),{},{components:o})):n.createElement(d,r({ref:t},m))}));function k(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=o.length,r=new Array(i);r[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var p=2;p<i;p++)r[p]=o[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,o)}h.displayName="MDXCreateElement"},79022:(e,t,o)=>{o.d(t,{Z:()=>i});var n=o(27378),a=o(9619);function i(e){let{header:t,updated:o,version:i}=e;return n.createElement(a.Z,{text:`v${i}`,variant:o?"success":"info",className:t?"absolute right-0 top-1.5":"ml-2"})}},9619:(e,t,o)=>{o.d(t,{Z:()=>s});var n=o(27378),a=o(38944),i=o(31792);const r={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function s(e){let{className:t,icon:o,text:s,variant:l}=e;return n.createElement("span",{className:(0,a.Z)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",l?r[l]:"bg-gray-100 text-gray-800",t)},o&&n.createElement(i.Z,{icon:o,className:"mr-1"}),s)}},7196:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var n=o(25773),a=(o(27378),o(35318)),i=o(79022);const r={title:"VCS hooks",tags:["vcs","hooks","git","git-hooks"]},s=void 0,l={unversionedId:"guides/vcs-hooks",id:"guides/vcs-hooks",title:"VCS hooks",description:"VCS hooks (most popular with Git) are a",source:"@site/docs/guides/vcs-hooks.mdx",sourceDirName:"guides",slug:"/guides/vcs-hooks",permalink:"/docs/guides/vcs-hooks",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/guides/vcs-hooks.mdx",tags:[{label:"vcs",permalink:"/docs/tags/vcs"},{label:"hooks",permalink:"/docs/tags/hooks"},{label:"git",permalink:"/docs/tags/git"},{label:"git-hooks",permalink:"/docs/tags/git-hooks"}],version:"current",frontMatter:{title:"VCS hooks",tags:["vcs","hooks","git","git-hooks"]},sidebar:"guides",previous:{title:"Webhooks (experimental)",permalink:"/docs/guides/webhooks"},next:{title:"Deno handbook",permalink:"/docs/guides/javascript/deno-handbook"}},p={},m=[{value:"Defining hooks",id:"defining-hooks",level:2},{value:"Enabling hooks",id:"enabling-hooks",level:2},{value:"Automatically for everyone",id:"automatically-for-everyone",level:3},{value:"Manually by each developer",id:"manually-by-each-developer",level:3},{value:"Disabling hooks",id:"disabling-hooks",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Git",id:"git",level:3},{value:"Examples",id:"examples",level:2},{value:"Pre-commit",id:"pre-commit",level:3}],c={toc:m};function h(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(i.Z,{version:"1.9.0",header:!0,mdxType:"VersionLabel"}),(0,a.kt)("p",null,"VCS hooks (most popular with ",(0,a.kt)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"},"Git"),") are a\nmechanism for running scripts at pre-defined phases in the VCS's lifecycle, most commonly\npre-commit, pre-push, or pre-merge. With moon, we provide a built-in solution for managing hooks,\nand syncing them across developers and machines."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://git-scm.com/docs/githooks"},"Learn more about Git hooks"))),(0,a.kt)("h2",{id:"defining-hooks"},"Defining hooks"),(0,a.kt)("p",null,"Hooks can be configured with the ",(0,a.kt)("a",{parentName:"p",href:"../config/workspace#hooks"},(0,a.kt)("inlineCode",{parentName:"a"},"vcs.hooks"))," setting in\n",(0,a.kt)("a",{parentName:"p",href:"../config/workspace"},(0,a.kt)("inlineCode",{parentName:"a"},".moon/workspace.yml")),". This setting requires a map of hook names (in the\nformat required by your VCS), to a list of arbitrary commands to run within the hook script.\nCommands are used as-is and are not formatted or interpolated in any way."),(0,a.kt)("p",null,"To demonstrate this, let's configure a ",(0,a.kt)("inlineCode",{parentName:"p"},"pre-commit")," hook that runs a moon ",(0,a.kt)("inlineCode",{parentName:"p"},"lint")," task for affected\nprojects, and also verifies that the commit message abides by a specified format (using\n",(0,a.kt)("a",{parentName:"p",href:"https://pre-commit.com/"},"pre-commit"),")."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml"',title:'".moon/workspace.yml"'},"vcs:\n  hooks:\n    pre-commit:\n      - 'pre-commit run'\n      - 'moon run :lint --affected'\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"All commands are executed from the repository root (not moon's workspace root) and must exist on\n",(0,a.kt)("inlineCode",{parentName:"p"},"PATH"),". If ",(0,a.kt)("inlineCode",{parentName:"p"},"moon")," is installed locally, you can execute it using a repository relative path, like\n",(0,a.kt)("inlineCode",{parentName:"p"},"./node_modules/@moonrepo/cli/moon"),".")),(0,a.kt)("h2",{id:"enabling-hooks"},"Enabling hooks"),(0,a.kt)("p",null,"Hooks are a divisive subject, as some developers love them, and others hate them. Finding a viable\nsolution for everyone can be difficult, so with moon, we opted to support 2 distinct options, but\nonly 1 can be used at a time. Choose the option that works best for your project, team, or company!"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"If you have existing VCS hooks, back them up as moon's implementation will overwrite them! To\nmigrate your existing hooks, ",(0,a.kt)("a",{parentName:"p",href:"#defining-hooks"},"configure them as commands to run"),".")),(0,a.kt)("h3",{id:"automatically-for-everyone"},"Automatically for everyone"),(0,a.kt)("p",null,"If you'd like hooks to be enforced for every contributor of the repository, then simply enable the\n",(0,a.kt)("a",{parentName:"p",href:"../config/workspace#synchooks"},(0,a.kt)("inlineCode",{parentName:"a"},"vcs.syncHooks"))," setting in\n",(0,a.kt)("a",{parentName:"p",href:"../config/workspace"},(0,a.kt)("inlineCode",{parentName:"a"},".moon/workspace.yml")),". This will automatically generate hook scripts and link\nthem with the local VCS checkout, everytime a ",(0,a.kt)("a",{parentName:"p",href:"../concepts/target"},"target")," is ran."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml"',title:'".moon/workspace.yml"'},"vcs:\n  hooks: [...]\n  syncHooks: true\n")),(0,a.kt)("h3",{id:"manually-by-each-developer"},"Manually by each developer"),(0,a.kt)("p",null,"If you'd prefer contributors to have a choice in whether or not they want to use hooks, then simply\ndo nothing, and guide them to run the ",(0,a.kt)("a",{parentName:"p",href:"../commands/sync/hooks"},(0,a.kt)("inlineCode",{parentName:"a"},"moon sync hooks"))," command. This\ncommand will generate hook scripts and link them with the local VCS checkout."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ moon sync hooks\n")),(0,a.kt)("h2",{id:"disabling-hooks"},"Disabling hooks"),(0,a.kt)("p",null,"If you choose to stop using hooks, you'll need to cleanup the previously generated hook scripts, and\nreset the VCS checkout. To start, disable the ",(0,a.kt)("inlineCode",{parentName:"p"},"vcs.syncHooks")," setting."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml"',title:'".moon/workspace.yml"'},"vcs:\n  syncHooks: false\n")),(0,a.kt)("p",null,"And then run the following command, which will delete files from your local filesystem. Every\ndeveloper that is using hooks will need to run this command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ moon sync hooks --clean\n")),(0,a.kt)("h2",{id:"how-it-works"},"How it works"),(0,a.kt)("p",null,"When hooks are ",(0,a.kt)("a",{parentName:"p",href:"#enabling-hooks"},"enabled"),", the following processes will take place."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"The configured ",(0,a.kt)("a",{parentName:"p",href:"#defining-hooks"},"hooks")," will be generated as individual script files in the\n",(0,a.kt)("inlineCode",{parentName:"p"},".moon/hooks")," directory. Whether or not you commit or ignore these script files is your choice.\nThey are written to the ",(0,a.kt)("inlineCode",{parentName:"p"},".moon")," directory so that they can be reviewed, audited, and easily\ntested, but ",(0,a.kt)("em",{parentName:"p"},"are required"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"We then sync these generated hook scripts with the current VCS. For Git, we create ",(0,a.kt)("inlineCode",{parentName:"p"},".git/hooks"),"\nfiles that execute our generated scripts, using repository relative commands. Any existing VCS\nhooks ",(0,a.kt)("em",{parentName:"p"},"will be overwritten"),"."))),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},".moon/hooks")," scripts are generated as Bash scripts (use a ",(0,a.kt)("inlineCode",{parentName:"p"},".sh")," file extension) on Unix, and\nPowerShell scripts (use a ",(0,a.kt)("inlineCode",{parentName:"p"},".ps1")," file extension) on Windows.")),(0,a.kt)("h3",{id:"git"},"Git"),(0,a.kt)("p",null,"On Unix based operating systems (Linux, macOS, etc), the ",(0,a.kt)("inlineCode",{parentName:"p"},".moon/hooks")," scripts are executed from\n",(0,a.kt)("inlineCode",{parentName:"p"},".git/hooks")," Bash files. Because of this, ",(0,a.kt)("inlineCode",{parentName:"p"},"bash")," should be available on the system (which is\ntypically the case)."),(0,a.kt)("p",null,"On Windows, things get tricky. Since Git has a requirement that ",(0,a.kt)("inlineCode",{parentName:"p"},".git/hooks")," files ",(0,a.kt)("em",{parentName:"p"},"must be"),"\nextensionless, and older versions of PowerShell require an extension, we have to use a workaround.\nTo handle this, the ",(0,a.kt)("inlineCode",{parentName:"p"},".git/hooks")," files are Bash-like scripts (that should work on most machines)\nthat execute ",(0,a.kt)("inlineCode",{parentName:"p"},".moon/hooks")," using the ",(0,a.kt)("inlineCode",{parentName:"p"},"powershell.exe")," (or ",(0,a.kt)("inlineCode",{parentName:"p"},"pwsh.exe"),") executables. Because of this,\nPowerShell must be available on the system."),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("h3",{id:"pre-commit"},"Pre-commit"),(0,a.kt)("p",null,"A perfect use case for the ",(0,a.kt)("inlineCode",{parentName:"p"},"pre-commit")," hook is to check linting and formatting of the files being\ncommitted. If either of these tasks fail, the commit will abort until they are fixed. Be sure to use\nthe ",(0,a.kt)("a",{parentName:"p",href:"../run-task#running-based-on-affected-files-only"},(0,a.kt)("inlineCode",{parentName:"a"},"--affected"))," option so that we ",(0,a.kt)("em",{parentName:"p"},"only run")," on\nchanged projects!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml"',title:'".moon/workspace.yml"'},"vcs:\n  hooks:\n    pre-commit:\n      - 'moon run :lint :format --affected --status=staged'\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"By default this will run on the ",(0,a.kt)("em",{parentName:"p"},"entire")," project (all files). If you want to filter it to only the\nchanged files, enable the ",(0,a.kt)("a",{parentName:"p",href:"../config/project#affectedfiles"},(0,a.kt)("inlineCode",{parentName:"a"},"affectedFiles"))," task option.")))}h.isMDXComponent=!0}}]);