"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[40128],{9609:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var s=t(24246),i=t(71670),o=t(79022);const r={title:"Extensions",tags:["extension","wasm","plugin"],toc_max_heading_level:4},a=void 0,l={id:"guides/extensions",title:"Extensions",description:"An extension is a WASM plugin that allows you to extend moon with additional functionality, have",source:"@site/docs/guides/extensions.mdx",sourceDirName:"guides",slug:"/guides/extensions",permalink:"/docs/guides/extensions",draft:!1,unlisted:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/guides/extensions.mdx",tags:[{label:"extension",permalink:"/docs/tags/extension"},{label:"wasm",permalink:"/docs/tags/wasm"},{label:"plugin",permalink:"/docs/tags/plugin"}],version:"current",frontMatter:{title:"Extensions",tags:["extension","wasm","plugin"],toc_max_heading_level:4},sidebar:"guides",previous:{title:"Docker usage",permalink:"/docs/guides/docker"},next:{title:"Offline mode",permalink:"/docs/guides/offline-mode"}},c={},d=[{value:"Using extensions",id:"using-extensions",level:2},{value:"Built-in extensions",id:"built-in-extensions",level:2},{value:"<code>download</code>",id:"download",level:3},{value:"Arguments",id:"arguments",level:4},{value:"Creating an extension",id:"creating-an-extension",level:2},{value:"Implementing execution",id:"implementing-execution",level:3},{value:"Supporting arguments",id:"supporting-arguments",level:3},{value:"Supporting configuration",id:"supporting-configuration",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.Z,{version:"1.20.0",header:!0}),"\n",(0,s.jsx)(n.p,{children:"An extension is a WASM plugin that allows you to extend moon with additional functionality, have\nwhitelisted access to the file system, and receive partial information about the current workspace.\nExtensions are extremely useful in offering new and unique functionality that doesn't need to be\nbuilt into moon's core. It also enables the community to build and share their own extensions!"}),"\n",(0,s.jsx)(n.h2,{id:"using-extensions",children:"Using extensions"}),"\n",(0,s.jsxs)(n.p,{children:["Before an extension can be executed with the ",(0,s.jsx)(n.a,{href:"../commands/ext",children:(0,s.jsx)(n.code,{children:"moon ext"})})," command, it must be\nconfigured with the ",(0,s.jsx)(n.a,{href:"../config/workspace#extensions",children:(0,s.jsx)(n.code,{children:"extensions"})})," setting in\n",(0,s.jsx)(n.a,{href:"../config/workspace",children:(0,s.jsx)(n.code,{children:".moon/workspace.yml"})})," (excluding ",(0,s.jsx)(n.a,{href:"#built-in-extensions",children:"built-in's"}),")."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"extensions:\n  example:\n    plugin: 'source:https://example.com/path/to/example.wasm'\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Once configured, it can be executed with ",(0,s.jsx)(n.a,{href:"../commands/ext",children:(0,s.jsx)(n.code,{children:"moon ext"})})," by name. Arguments unique to\nthe extension ",(0,s.jsx)(n.em,{children:"must"})," be passed after a ",(0,s.jsx)(n.code,{children:"--"})," separator."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ moon ext example -- --arg1 --arg2\n"})}),"\n",(0,s.jsx)(n.h2,{id:"built-in-extensions",children:"Built-in extensions"}),"\n",(0,s.jsxs)(n.p,{children:["moon is shipped with a few built-in extensions that are configured and enabled by default. Official\nmoon extensions are built and published in our ",(0,s.jsx)(n.a,{href:"https://github.com/moonrepo/moon-extensions",children:"moonrepo/moon-extensions"})," repository."]}),"\n",(0,s.jsx)(n.h3,{id:"download",children:(0,s.jsx)(n.code,{children:"download"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"download"})," extension can be used to download a file from a URL into the current workspace, as\ndefined by the ",(0,s.jsx)(n.code,{children:"--url"})," argument. For example, say we want to download the latest ",(0,s.jsx)(n.a,{href:"/proto",children:"proto"}),"\nbinary:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ moon ext download --\\\n  --url https://github.com/moonrepo/proto/releases/latest/download/proto_cli-aarch64-apple-darwin.tar.xz\n"})}),"\n",(0,s.jsxs)(n.p,{children:["By default this will download ",(0,s.jsx)(n.code,{children:"proto_cli-aarch64-apple-darwin.tar.xz"})," into the current working\ndirectory. To customize the location, use the ",(0,s.jsx)(n.code,{children:"--dest"})," argument. However, do note that the\ndestination ",(0,s.jsx)(n.em,{children:"must be"})," within the current moon workspace, as only certain directories are whitelisted\nfor WASM."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ moon ext download --\\\n  --url https://github.com/moonrepo/proto/releases/latest/download/proto_cli-aarch64-apple-darwin.tar.xz\\\n  --dest ./temp\n"})}),"\n",(0,s.jsx)(n.h4,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--url"})," (required) - URL of a file to download."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--dest"})," - Destination folder to save the file. Defaults to the current working directory."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--name"})," - Override the file name. Defaults to the file name in the URL."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"creating-an-extension",children:"Creating an extension"}),"\n",(0,s.jsxs)(n.p,{children:["Refer to our ",(0,s.jsx)(n.a,{href:"./wasm-plugins",children:"official WASM guide"})," for more information on how our WASM plugins\nwork, critical concepts to know, how to create a plugin, and more. Once you have a good\nunderstanding, you may continue this specific guide."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Refer to our ",(0,s.jsx)(n.a,{href:"https://github.com/moonrepo/moon-extensions",children:"moonrepo/moon-extensions"})," repository for in-depth examples."]})}),"\n",(0,s.jsx)(n.h3,{id:"implementing-execution",children:"Implementing execution"}),"\n",(0,s.jsxs)(n.p,{children:["Extensions support a single plugin function, ",(0,s.jsx)(n.code,{children:"execute_extension"}),", which is called by the\n",(0,s.jsx)(n.a,{href:"../commands/ext",children:(0,s.jsx)(n.code,{children:"moon ext"})})," command to execute the extension. This is where all your business\nlogic will reside."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use extism_pdk::*;\nuse moon_pdk::{*, extension::*};\n\n#[host_fn]\nextern "ExtismHost" {\n    fn host_log(input: Json<HostLogInput>);\n}\n\n#[plugin_fn]\npub fn execute_extension(Json(input): Json<ExecuteExtensionInput>) -> FnResult<()> {\n  host_log!(stdout, "Executing extension!");\n\n  Ok(())\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"supporting-arguments",children:"Supporting arguments"}),"\n",(0,s.jsxs)(n.p,{children:["Most extensions will require arguments, as it provides a mechanism for users to pass information\ninto the WASM runtime. To parse arguments, we provide the\n",(0,s.jsx)(n.a,{href:"https://docs.rs/clap/latest/clap/trait.Args.html",children:(0,s.jsx)(n.code,{children:"Args"})})," trait/macro from the\n",(0,s.jsx)(n.a,{href:"https://crates.io/crates/clap",children:"clap"})," crate. Refer to their\n",(0,s.jsx)(n.a,{href:"https://docs.rs/clap/latest/clap/_derive/index.html",children:"official documentation on usage"})," (we don't\nsupport everything)."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"use moon_pdk::args::*;\n\n#[derive(Args)]\npub struct ExampleExtensionArgs {\n  // --url, -u\n  #[arg(long, short = 'u', required = true)]\n  pub url: String,\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Once your struct has been defined, you can parse the provided input arguments using the\n",(0,s.jsx)(n.a,{href:"https://docs.rs/moon_pdk/latest/moon_pdk/args/fn.parse_args.html",children:(0,s.jsx)(n.code,{children:"parse_args"})})," function."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"#[plugin_fn]\npub fn execute_extension(Json(input): Json<ExecuteExtensionInput>) -> FnResult<()> {\n  let args = parse_args::<ExampleExtensionArgs>(&input.args)?;\n\n  args.url; // --url\n\n  Ok(())\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"supporting-configuration",children:"Supporting configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Users can configure ",(0,s.jsx)(n.a,{href:"../config/workspace#extensions",children:"extensions"})," with additional settings in\n",(0,s.jsx)(n.a,{href:"../config/workspace",children:(0,s.jsx)(n.code,{children:".moon/workspace.yml"})}),". Do note that settings should be in camelCase for them\nto be parsed correctly!"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"extensions:\n  example:\n    plugin: 'source:./path/to/example.wasm'\n    someSetting: 'abc'\n    anotherSetting: 123\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In the plugin, we can map these settings (excluding ",(0,s.jsx)(n.code,{children:"plugin"}),") into a struct. The ",(0,s.jsx)(n.code,{children:"Default"})," trait\nmust be implemented to handle situations where settings were not configured, or some are missing."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"config_struct!(\n  #[derive(Default)]\n  pub struct ExampleExtensionConfig {\n    pub some_setting: String,\n    pub another_setting: u32,\n  }\n);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Once your struct has been defined, you can access the configuration using the\n",(0,s.jsx)(n.a,{href:"https://docs.rs/moon_pdk/latest/moon_pdk/extension/fn.get_extension_config.html",children:(0,s.jsx)(n.code,{children:"get_extension_config"})}),"\nfunction"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"#[plugin_fn]\npub fn execute_extension(Json(input): Json<ExecuteExtensionInput>) -> FnResult<()> {\n  let config = get_extension_config::<ExampleExtensionConfig>()?;\n\n  config.another_setting; // 123\n\n  Ok(())\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},79022:(e,n,t)=>{t.d(n,{Z:()=>o});var s=t(9619),i=t(24246);function o(e){let{header:n,inline:t,updated:o,version:r}=e;return(0,i.jsx)(s.Z,{text:`v${r}`,variant:o?"success":"info",className:n?"absolute right-0 top-1.5":t?"inline-block":"ml-2"})}},9619:(e,n,t)=>{t.d(n,{Z:()=>a});var s=t(40624),i=t(31792),o=t(24246);const r={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function a(e){let{className:n,icon:t,text:a,variant:l}=e;return(0,o.jsxs)("span",{className:(0,s.Z)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",l?r[l]:"bg-gray-100 text-gray-800",n),children:[t&&(0,o.jsx)(i.Z,{icon:t,className:"mr-1"}),a]})}},71670:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>r});var s=t(27378);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);