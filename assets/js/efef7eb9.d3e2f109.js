"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[56040],{35318:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>h});var o=t(27378);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),p=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=p(e.components);return o.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=p(t),h=r,d=u["".concat(l,".").concat(h)]||u[h]||c[h]||a;return t?o.createElement(d,i(i({ref:n},m),{},{components:t})):o.createElement(d,i({ref:n},m))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},15381:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var o=t(25773),r=(t(27378),t(35318));const a={slug:"moon-v1.14",title:"moon v1.14 - Improvements to running targets and toolchain versions",authors:["milesj"],tags:["run","target","toolchain","version","ci","shorthand"],image:"./img/moon/v1.14.png"},i=void 0,s={permalink:"/blog/moon-v1.14",editUrl:"https://github.com/moonrepo/moon/tree/master/website/blog/2023-09-25_moon-v1.14.mdx",source:"@site/blog/2023-09-25_moon-v1.14.mdx",title:"moon v1.14 - Improvements to running targets and toolchain versions",description:"In this release, we've focused on loosening restrictions to improve the overall developer",date:"2023-09-25T00:00:00.000Z",formattedDate:"September 25, 2023",tags:[{label:"run",permalink:"/blog/tags/run"},{label:"target",permalink:"/blog/tags/target"},{label:"toolchain",permalink:"/blog/tags/toolchain"},{label:"version",permalink:"/blog/tags/version"},{label:"ci",permalink:"/blog/tags/ci"},{label:"shorthand",permalink:"/blog/tags/shorthand"}],readingTime:2.665,hasTruncateMarker:!0,authors:[{name:"Miles Johnson",title:"Founder, developer",url:"https://github.com/milesj",imageURL:"/img/authors/miles.jpg",key:"milesj"}],frontMatter:{slug:"moon-v1.14",title:"moon v1.14 - Improvements to running targets and toolchain versions",authors:["milesj"],tags:["run","target","toolchain","version","ci","shorthand"],image:"./img/moon/v1.14.png"},prevItem:{title:"proto v0.19 - Version pinning and outdated checks",permalink:"/blog/proto-v0.19"},nextItem:{title:"proto v0.18 - List installed tools and configure HTTP client",permalink:"/blog/proto-v0.18"}},l={image:t(1816).Z,authorsImageUrls:[void 0]},p=[{value:"Shorthand for <code>moon run</code>",id:"shorthand-for-moon-run",level:2},{value:"Choose targets for <code>moon ci</code>",id:"choose-targets-for-moon-ci",level:2},{value:"Configure partial toolchain versions",id:"configure-partial-toolchain-versions",level:2},{value:"Other changes",id:"other-changes",level:2}],m={toc:p};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In this release, we've focused on loosening restrictions to improve the overall developer\nexperience."),(0,r.kt)("h2",{id:"shorthand-for-moon-run"},"Shorthand for ",(0,r.kt)("inlineCode",{parentName:"h2"},"moon run")),(0,r.kt)("p",null,'This has been a long requested feature and we\'re happy to finally deliver it! You can now omit the\n"run" keyword for the ',(0,r.kt)("a",{parentName:"p",href:"/docs/commands/run"},(0,r.kt)("inlineCode",{parentName:"a"},"moon run"))," command, just so long as the first non-option\nargument is a target (must contain a ",(0,r.kt)("inlineCode",{parentName:"p"},":"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# v1.13\n$ moon run app:build\n\n# v1.14+\n$ moon app:build\n")),(0,r.kt)("h2",{id:"choose-targets-for-moon-ci"},"Choose targets for ",(0,r.kt)("inlineCode",{parentName:"h2"},"moon ci")),(0,r.kt)("p",null,"When we initially built ",(0,r.kt)("a",{parentName:"p",href:"/docs/commands/ci"},(0,r.kt)("inlineCode",{parentName:"a"},"moon ci")),", we wanted a solution that simply ran\neverything in CI that ",(0,r.kt)("em",{parentName:"p"},"should be ran"),", taking care of all the complicated logic to determine\naffected tasks, comparing Git branches, gathering targets, partitioning across jobs, etc... And it\ndoes just that, and it does it well!"),(0,r.kt)("p",null,"However, one major caveat to using ",(0,r.kt)("inlineCode",{parentName:"p"},"moon ci")," is that it runs ",(0,r.kt)("em",{parentName:"p"},"every task")," in the workspace (assuming\nthey're affected). This has been quite a blocker for adoption as teams may want fine-grained control\nof their CI. For example, running build tasks in one job, lint tasks in another, so on and so forth."),(0,r.kt)("p",null,"In this release, we've made the necessary changes to allow these workflows, by supporting a list of\ntargets for ",(0,r.kt)("inlineCode",{parentName:"p"},"moon ci"),", similar to how ",(0,r.kt)("inlineCode",{parentName:"p"},"moon run"),' works. If no targets are provide, the existing "run\neverything" logic will be used.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# v1.13\n$ moon ci\n\n# v1.14+\n$ moon ci :build :lint :etc\n")),(0,r.kt)("p",null,"Splitting targets across jobs is demonstrated with the following GitHub Action workflow:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".github/workflows/ci.yml"',title:'".github/workflows/ci.yml"'},"name: 'CI'\non:\n  push:\n    branches:\n      - 'master'\n  pull_request:\njobs:\n  build:\n    name: 'Build'\n    runs-on: 'ubuntu-latest'\n    steps:\n      - uses: 'actions/checkout@v4'\n        with:\n          fetch-depth: 0\n      - uses: 'moonrepo/setup-moon-action@v1'\n      - run: 'moon ci :build'\n  format-lint:\n    name: 'Format + Lint'\n    runs-on: 'ubuntu-latest'\n    steps:\n      - uses: 'actions/checkout@v4'\n        with:\n          fetch-depth: 0\n      - uses: 'moonrepo/setup-moon-action@v1'\n      - run: 'moon ci :format :lint'\n  test:\n    name: 'Test'\n    runs-on: 'ubuntu-latest'\n    steps:\n      - uses: 'actions/checkout@v4'\n        with:\n          fetch-depth: 0\n      - uses: 'moonrepo/setup-moon-action@v1'\n      - run: 'moon ci :test'\n")),(0,r.kt)("h2",{id:"configure-partial-toolchain-versions"},"Configure partial toolchain versions"),(0,r.kt)("p",null,"Since moon's inception, our ",(0,r.kt)("a",{parentName:"p",href:"/docs/concepts/toolchain"},"integrated toolchain"),' required fully\nqualified semantic versions (major.minor.patch) for tools. This was by design to ensure that we\ncould provide a consistent, reliable, and deterministic experience for all users. This solved the\nproblem of "Is X using the correct version of Y?".'),(0,r.kt)("p",null,"However, this also meant that we were unable to support partial versions (major.minor) of tools,\nwhich is a common use case and request for many users. Over the last few months, we've made immense\nprogress in ",(0,r.kt)("a",{parentName:"p",href:"/proto"},"proto")," on how it parses, resolves, and evaluates versions, known as the\n",(0,r.kt)("a",{parentName:"p",href:"https://crates.io/crates/version_spec"},"version specification"),"."),(0,r.kt)("p",null,"We felt the time was right to pull these changes into moon, and as such, all ",(0,r.kt)("inlineCode",{parentName:"p"},"version")," fields in\n",(0,r.kt)("a",{parentName:"p",href:"/docs/config/toolchain"},(0,r.kt)("inlineCode",{parentName:"a"},".moon/toolchain.yml"))," now support partial versions, version\nrequirements/ranges, and even aliases!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/toolchain.yml"',title:'".moon/toolchain.yml"'},"node:\n  version: '20.7' # ~20.7\n  npm:\n    version: '^9'\n\nrust:\n  version: 'stable'\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Learn more about how this works under the hood in the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/concepts/toolchain#version-specification"},"official version specification documentation"),".")),(0,r.kt)("h2",{id:"other-changes"},"Other changes"),(0,r.kt)("p",null,"View the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moonrepo/moon/releases/tag/v1.14.0"},"official release")," for a full list\nof changes."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"packemon"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"sveltekit"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"vite"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"vitest")," to\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/moonrepo/moon-configs"},"moonrepo/moon-configs"),"."),(0,r.kt)("li",{parentName:"ul"},"Updated ",(0,r.kt)("inlineCode",{parentName:"li"},".moon/tasks")," to support nested folders, for better organization of task files."),(0,r.kt)("li",{parentName:"ul"},"Improved handling of certificates and proxies."),(0,r.kt)("li",{parentName:"ul"},"Updated to proto v0.18.")))}c.isMDXComponent=!0},1816:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/v1.14-3ce565f42964d96ef37006c8ad92d6d6.png"}}]);