"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1175],{6243:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7378),l=n(8944);const r="tabItem_lLGn";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,i),hidden:n},t)}},637:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(5773),l=n(7378),r=n(6457),i=n(784),o=n(9947),s=n(3457),p=n(8944);const u="tabList_lSCs",c="tabItem_WhCL";function m(e){var t,n,r;const{lazy:m,block:d,defaultValue:g,values:h,groupId:v,className:k}=e,f=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=h?h:f.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),x=(0,i.l)(b,((e,t)=>e.value===t.value));if(x.length>0)throw new Error('Docusaurus error: Duplicate values "'+x.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===g?g:null!=(t=null!=g?g:null==(n=f.find((e=>e.props.default)))?void 0:n.props.value)?t:null==(r=f[0])?void 0:r.props.value;if(null!==y&&!b.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:j,setTabGroupChoices:N}=(0,o.U)(),[w,E]=(0,l.useState)(y),Z=[],{blockElementScrollPositionUntilNextRender:C}=(0,s.o5)();if(null!=v){const e=j[v];null!=e&&e!==w&&b.some((t=>t.value===e))&&E(e)}const R=e=>{const t=e.currentTarget,n=Z.indexOf(t),a=b[n].value;a!==w&&(C(t),E(a),null!=v&&N(v,a))},T=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=Z.indexOf(e.currentTarget)+1;n=Z[t]||Z[0];break}case"ArrowLeft":{const t=Z.indexOf(e.currentTarget)-1;n=Z[t]||Z[Z.length-1];break}}null==(t=n)||t.focus()};return l.createElement("div",{className:(0,p.Z)("tabs-container",u)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":d},k)},b.map((e=>{let{value:t,label:n,attributes:r}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>Z.push(e),onKeyDown:T,onFocus:R,onClick:R},r,{className:(0,p.Z)("tabs__item",c,null==r?void 0:r.className,{"tabs__item--active":w===t})}),null!=n?n:t)}))),m?(0,l.cloneElement)(f.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function d(e){const t=(0,r.Z)();return l.createElement(m,(0,a.Z)({key:String(t)},e))}},6642:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(7378),l=n(9589),r=n(6243),i=n(637);function o(e,t,n){let a=e.package?"yarn workspace "+e.package+" add ":"yarn add ";return e.dev?a+="--dev ":e.peer&&(a+="--peer "),n&&t&&!e.package&&(a+="-W "),a+=e.dep,a}function s(e,t){let n="pnpm add ";return e.dev?n+="--save-dev ":e.peer&&(n+="--save-peer "),e.package?n+="--filter "+e.package+" ":t&&(n+="-w "),n+=e.dep,n}function p(e){let t=o(e,!1,!0),n=s(e,!1);return e.package||(t+="\n\n# If using workspaces\n",n+="\n\n# If using workspaces\n",t+=o(e,!0,!0),n+=s(e,!0)),a.createElement(i.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"Yarn (classic)",value:"yarn1"},{label:"npm",value:"npm"},{label:"pnpm",value:"pnpm"}]},a.createElement(r.Z,{value:"yarn"},a.createElement(l.Z,{language:"shell"},o(e,!1,!1))),a.createElement(r.Z,{value:"yarn1"},a.createElement(l.Z,{language:"shell"},t)),a.createElement(r.Z,{value:"npm"},a.createElement(l.Z,{language:"shell"},function(e){let t="npm install ";return e.dev?t+="--save-dev ":e.peer&&(t+="--save-peer "),e.package&&(t+="--workspace "+e.package+" "),t+=e.dep,t}(e))),a.createElement(r.Z,{value:"pnpm"},a.createElement(l.Z,{language:"shell"},n)))}},7457:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7378),l=n(9589),r=n(6243),i=n(637);function o(e,t,n){return(e+" create "+t+" "+n.join(" ")).trim()}function s(e){let{dep:t,args:n=[]}=e;return a.createElement(i.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"Yarn (classic)",value:"yarn1"},{label:"npm",value:"npm"},{label:"pnpm",value:"pnpm"}]},a.createElement(r.Z,{value:"yarn"},a.createElement(l.Z,{language:"shell"},o("yarn",t,n))),a.createElement(r.Z,{value:"yarn1"},a.createElement(l.Z,{language:"shell"},o("yarn",t,n))),a.createElement(r.Z,{value:"npm"},a.createElement(l.Z,{language:"shell"},o("npm",t,n))),a.createElement(r.Z,{value:"pnpm"},a.createElement(l.Z,{language:"shell"},o("pnpm",t,n))))}},3488:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(5773),l=(n(7378),n(5318));n(6642),n(7457);const r={title:"Remix example",sidebar_label:"Remix"},i=void 0,o={unversionedId:"guides/examples/remix",id:"guides/examples/remix",title:"Remix example",description:"Remix has been prototyped in our",source:"@site/docs/guides/examples/remix.mdx",sourceDirName:"guides/examples",slug:"/guides/examples/remix",permalink:"/docs/guides/examples/remix",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/guides/examples/remix.mdx",tags:[],version:"current",frontMatter:{title:"Remix example",sidebar_label:"Remix"},sidebar:"docs",previous:{title:"React",permalink:"/docs/guides/examples/react"},next:{title:"TypeScript",permalink:"/docs/guides/examples/typescript"}},s={},p=[{value:"Setup",id:"setup",level:2},{value:"ESLint integration",id:"eslint-integration",level:3},{value:"TypeScript integration",id:"typescript-integration",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Root-level",id:"root-level",level:3},{value:"Project-level",id:"project-level",level:3}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Remix has been prototyped in our\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/moonrepo/examples/tree/master/apps/remix-app"},"examples repository"),", check it\nout!")),(0,l.kt)("p",null,"In this guide, you'll learn how to integrate ",(0,l.kt)("a",{parentName:"p",href:"https://remix.run"},"Remix")," into moon."),(0,l.kt)("p",null,"Begin by creating a new Remix project at a specified folder path (this should not be created in the\nworkspace root, unless a polyrepo)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"cd apps && npx create-remix\n")),(0,l.kt)("p",null,'During this installation, Remix will ask a handful of questions, but be sure to answer "No" for the\n"Do you want me to run ',(0,l.kt)("inlineCode",{parentName:"p"},"npm install"),'?" question. We suggest installing dependencies at the workspace\nroot via package workspaces!'),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"View the ",(0,l.kt)("a",{parentName:"p",href:"https://remix.run/docs/en/v1"},"official Remix docs")," for a more in-depth guide to getting\nstarted!")),(0,l.kt)("h2",{id:"setup"},"Setup"),(0,l.kt)("p",null,"Since Remix is per-project, the associated moon tasks should be defined in each project's ",(0,l.kt)("inlineCode",{parentName:"p"},"moon.yml"),"\nfile."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="<project>/moon.yml"',title:'"<project>/moon.yml"'},"fileGroups:\n    remix:\n        - 'app/**/*'\n        - 'public/**/*'\n        - 'remix.env.d.ts'\n        - 'remix.config.*'\n\ntasks:\n    # Development server\n    dev:\n        command: 'remix dev'\n        inputs:\n            - '@group(remix)'\n        local: true\n\n    # Production build\n    build:\n        command: 'remix build'\n        inputs:\n            - '@group(remix)'\n        outputs:\n            - 'build'\n\n    # Serve the build\n    start:\n        command: 'remix-serve ./build'\n        deps:\n            - '~:build'\n        inputs:\n            - '@group(remix)'\n        local: true\n")),(0,l.kt)("h3",{id:"eslint-integration"},"ESLint integration"),(0,l.kt)("p",null,"Remix does not provide a built-in linting abstraction, and instead provides a simple ESLint\nconfiguration package,\n",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@remix-run/eslint-config"},(0,l.kt)("inlineCode",{parentName:"a"},"@remix-run/eslint-config")),". For the rest\nof this section, we're going to assume that a ",(0,l.kt)("a",{parentName:"p",href:"./eslint"},"global ",(0,l.kt)("inlineCode",{parentName:"a"},"lint")," task")," has been configured."),(0,l.kt)("p",null,"Begin be installing the ",(0,l.kt)("inlineCode",{parentName:"p"},"@remix-run/eslint-config")," dependency in the application's ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json"),".\nWe can then enable this configuration by creating an ",(0,l.kt)("inlineCode",{parentName:"p"},".eslintrc.js")," file in the project root. Be\nsure this file is listed in your ",(0,l.kt)("inlineCode",{parentName:"p"},"lint")," task's inputs!"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="<project>/.eslintrc.js"',title:'"<project>/.eslintrc.js"'},"module.exports = {\n  extends: ['@remix-run/eslint-config', '@remix-run/eslint-config/node'],\n\n  // If using TypeScript\n  parser: '@typescript-eslint/parser',\n  parserOptions: {\n    project: 'tsconfig.json',\n    tsconfigRootDir: __dirname,\n  },\n};\n")),(0,l.kt)("h3",{id:"typescript-integration"},"TypeScript integration"),(0,l.kt)("p",null,"Remix ships with TypeScript support (when enabled during installation), but the ",(0,l.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," it\ngenerates is ",(0,l.kt)("em",{parentName:"p"},"not")," setup for TypeScript project references, which we suggest using with a\n",(0,l.kt)("a",{parentName:"p",href:"./typescript"},"global ",(0,l.kt)("inlineCode",{parentName:"a"},"typecheck")," task"),"."),(0,l.kt)("p",null,"When using project references, we suggest the following ",(0,l.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),", which is a mix of Remix and\nmoon. Other compiler options, like ",(0,l.kt)("inlineCode",{parentName:"p"},"isolatedModules")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"esModuleInterop"),", should be declared in a\nshared configuration found in the workspace root (",(0,l.kt)("inlineCode",{parentName:"p"},"tsconfig.projectOptions.json")," in the example)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="<project>/tsconfig.json"',title:'"<project>/tsconfig.json"'},'{\n  "extends": "../../tsconfig.projectOptions.json",\n  "compilerOptions": {\n    "baseUrl": ".",\n    "emitDeclarationOnly": false,\n    "jsx": "react-jsx",\n    "resolveJsonModule": true,\n    "moduleResolution": "node",\n    "noEmit": true,\n    "paths": {\n      "~/*": ["./app/*"]\n    }\n  },\n  "include": [".eslintrc.js", "remix.env.d.ts", "**/*"],\n  "exclude": [".cache", "build", "public"]\n}\n')),(0,l.kt)("h2",{id:"configuration"},"Configuration"),(0,l.kt)("h3",{id:"root-level"},"Root-level"),(0,l.kt)("p",null,"We suggest ",(0,l.kt)("em",{parentName:"p"},"against")," root-level configuration, as Remix should be installed per-project, and the\n",(0,l.kt)("inlineCode",{parentName:"p"},"remix")," command expects the configuration to live relative to the project root."),(0,l.kt)("h3",{id:"project-level"},"Project-level"),(0,l.kt)("p",null,"When creating a new Remix project, a\n",(0,l.kt)("a",{parentName:"p",href:"https://remix.run/docs/en/v1/api/conventions"},(0,l.kt)("inlineCode",{parentName:"a"},"remix.config.js"))," is created, and ",(0,l.kt)("em",{parentName:"p"},"must")," exist in\nthe project root. This allows each project to configure Remix for their needs."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="<project>/remix.config.js"',title:'"<project>/remix.config.js"'},"module.exports = {\n  appDirectory: 'app',\n};\n")))}c.isMDXComponent=!0}}]);