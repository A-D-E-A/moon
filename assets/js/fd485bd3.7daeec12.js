"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[543],{35318:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var o=t(27378);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),u=r,h=d["".concat(l,".").concat(u)]||d[u]||m[u]||a;return t?o.createElement(h,i(i({ref:n},p),{},{components:t})):o.createElement(h,i({ref:n},p))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9351:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=t(25773),r=(t(27378),t(35318));const a={slug:"moon-v1.8",title:"moon v1.8 - Code owners and shared configuration",authors:["milesj"],tags:["source","code","owners","ownership"],image:"./img/moon/v1.8.png"},i=void 0,s={permalink:"/blog/moon-v1.8",editUrl:"https://github.com/moonrepo/moon/tree/master/website/blog/2023-06-12_moon-v1.8.mdx",source:"@site/blog/2023-06-12_moon-v1.8.mdx",title:"moon v1.8 - Code owners and shared configuration",description:"With this release, we've focused on a critical facet of managing a large codebase, source code",date:"2023-06-12T00:00:00.000Z",formattedDate:"June 12, 2023",tags:[{label:"source",permalink:"/blog/tags/source"},{label:"code",permalink:"/blog/tags/code"},{label:"owners",permalink:"/blog/tags/owners"},{label:"ownership",permalink:"/blog/tags/ownership"}],readingTime:3.265,hasTruncateMarker:!0,authors:[{name:"Miles Johnson",title:"Founder, developer",url:"https://github.com/milesj",imageURL:"/img/authors/miles.jpg",key:"milesj"}],frontMatter:{slug:"moon-v1.8",title:"moon v1.8 - Code owners and shared configuration",authors:["milesj"],tags:["source","code","owners","ownership"],image:"./img/moon/v1.8.png"},prevItem:{title:"proto v0.11 - New shims and better logging",permalink:"/blog/proto-v0.11"},nextItem:{title:"moon v1.7 - Next-generation configuration and errors",permalink:"/blog/moon-v1.7"}},l={image:t(18429).Z,authorsImageUrls:[void 0]},c=[{value:"Support for code ownership",id:"support-for-code-ownership",level:2},{value:"Generate a <code>CODEOWNERS</code>",id:"generate-a-codeowners",level:3},{value:"New project <code>owners</code> setting",id:"new-project-owners-setting",level:3},{value:"New <code>moon sync codeowners</code> command",id:"new-moon-sync-codeowners-command",level:3},{value:"Community-driven task configuration",id:"community-driven-task-configuration",level:2},{value:"Other changes",id:"other-changes",level:2}],p={toc:c};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"With this release, we've focused on a critical facet of managing a large codebase, source code\nownership, and sharing task configuration."),(0,r.kt)("h2",{id:"support-for-code-ownership"},"Support for code ownership"),(0,r.kt)("p",null,"An important workflow for companies of any size is reviewing code, and ensuring the right people are\nreviewing and approving that code. This is especially true for large companies with hundreds of\ndevelopers, or many distinct teams working in a single codebase."),(0,r.kt)("p",null,"Popular VCS providers like ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/"},"GitHub"),", ",(0,r.kt)("a",{parentName:"p",href:"https://about.gitlab.com/"},"GitLab"),", and\n",(0,r.kt)("a",{parentName:"p",href:"https://bitbucket.org/product/"},"Bitbucket")," provide built-in features to handle such workflows,\naptly named code owners. They all achieve this through a similar mechanism, a single ",(0,r.kt)("inlineCode",{parentName:"p"},"CODEOWNERS"),"\nfile that maps file system paths to owners (users, teams, groups, etc). These owners are then\nrequired to approve a pull/merge request because it can be merged into the base branch."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"For more information, view our official in-depth ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/codeowners"},"code owners guide"),"!")),(0,r.kt)("h3",{id:"generate-a-codeowners"},"Generate a ",(0,r.kt)("inlineCode",{parentName:"h3"},"CODEOWNERS")),(0,r.kt)("p",null,"Managing the ",(0,r.kt)("inlineCode",{parentName:"p"},"CODEOWNERS")," file manually can be a tedious task, especially when you have hundreds of\nprojects. To help with this, moon can generate the ",(0,r.kt)("inlineCode",{parentName:"p"},"CODEOWNERS")," file for you,\n",(0,r.kt)("a",{parentName:"p",href:"#new-project-owners-setting"},"based on project owners"),", formatted to your VCS provider of choice.\nThis helps to avoid an out-of-date ownership file!"),(0,r.kt)("p",null,"We're introducing a few new workspace settings to handle this, the first is\n",(0,r.kt)("a",{parentName:"p",href:"/docs/config/workspace#codeowners"},(0,r.kt)("inlineCode",{parentName:"a"},"codeowners")),", which enables and configure code ownership as a\nwhole, and the second is ",(0,r.kt)("a",{parentName:"p",href:"/docs/config/workspace#provider"},(0,r.kt)("inlineCode",{parentName:"a"},"vcs.provider")),", which determines the VCS\nprovider to generate the file for (and unlocks future features)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/workspace.yml"',title:'".moon/workspace.yml"'},"codeowners:\n  syncOnRun: true\n  globalPaths:\n    '*': ['@admins']\n\nvcs:\n  manager: 'git'\n  provider: 'github'\n")),(0,r.kt)("p",null,"The settings above will generate the following file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title=".github/CODEOWNERS"',title:'".github/CODEOWNERS"'},"# (workspace)\n* @admins\n")),(0,r.kt)("p",null,"While this looks very simple, it really shines once projects start adding their own granular code\nownership. Continue reading for more information!"),(0,r.kt)("h3",{id:"new-project-owners-setting"},"New project ",(0,r.kt)("inlineCode",{parentName:"h3"},"owners")," setting"),(0,r.kt)("p",null,"To make use of code owners, you'll need to define an ",(0,r.kt)("a",{parentName:"p",href:"/docs/config/project#owners"},(0,r.kt)("inlineCode",{parentName:"a"},"owners"))," setting\nin a project's ",(0,r.kt)("a",{parentName:"p",href:"/docs/config/project"},(0,r.kt)("inlineCode",{parentName:"a"},"moon.yml"))," file. This setting requires a list/map of owners\n(contributors required to review) associated to file paths/patterns, relative from the current\nproject's root."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="packages/components/moon.yml"',title:'"packages/components/moon.yml"'},"owners:\n  paths:\n    'src/': ['@frontend', '@design-system']\n    '*.config.js': ['@frontend-infra']\n    '*.json': ['@frontend-infra']\n")),(0,r.kt)("p",null,"These paths will then be prefixed with the project source when\n",(0,r.kt)("a",{parentName:"p",href:"#generate-a-codeowners"},"generating the ",(0,r.kt)("inlineCode",{parentName:"a"},"CODEOWNERS"))," file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title=".github/CODEOWNERS"',title:'".github/CODEOWNERS"'},"# components\n/packages/components/src/ @frontend @design-system\n/packages/components/*.config.js @frontend-infra\n/packages/components/*.json @frontend-infra\n")),(0,r.kt)("h3",{id:"new-moon-sync-codeowners-command"},"New ",(0,r.kt)("inlineCode",{parentName:"h3"},"moon sync codeowners")," command"),(0,r.kt)("p",null,"Although moon can ",(0,r.kt)("a",{parentName:"p",href:"/docs/config/workspace#synconrun"},"automatically generate")," the ",(0,r.kt)("inlineCode",{parentName:"p"},"CODEOWNERS")," file\nwhen running a target, there may be situations where this is disabled, or teams/developers would\nlike to generate the file manually. To handle this, we're providing the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/commands/sync/codeowners"},(0,r.kt)("inlineCode",{parentName:"a"},"moon sync codeowners"))," command, which will trigger the generation\nprocess."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ moon sync codeowners\n")),(0,r.kt)("h2",{id:"community-driven-task-configuration"},"Community-driven task configuration"),(0,r.kt)("p",null,"A powerful but often overlooked feature of moon is the ability to\n",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/sharing-config"},"share and extend task configuration")," from remote sources. This is\nextremely useful in..."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Providing a single source of truth for configuration."),(0,r.kt)("li",{parentName:"ul"},"Reducing task duplication across projects."),(0,r.kt)("li",{parentName:"ul"},"Ensuring tasks are battle-tested and ready for use.")),(0,r.kt)("p",null,"The other upside of this approach is that configuration can be ",(0,r.kt)("em",{parentName:"p"},"community-driven"),"! To support this\nas a first-class feature, we're launching the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moonrepo/moon-configs"},(0,r.kt)("inlineCode",{parentName:"a"},"moon-configs")," repository"),", a collection of task\nconfigurations for popular programming languages, frameworks, libraries, and more! As of now, the\nrepository is kind of empty, but we're hoping to grow it over time, so feel free to contribute!"),(0,r.kt)("p",null,"If you're curious how this works in practice, we'll use our Rust configuration as an example. The\nentire system is based around ",(0,r.kt)("a",{parentName:"p",href:"/docs/concepts/task-inheritance"},"tag inheritance"),", where a project\ncan inherit tasks from a remote source, and then extend or override them as needed. For example,\ncreate the tag-based config:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".moon/tasks/tag-rust.yml"',title:'".moon/tasks/tag-rust.yml"'},"extends: 'https://raw.githubusercontent.com/moonrepo/moon-configs/master/rust/tasks-workspace.yml'\n")),(0,r.kt)("p",null,"And then in Rust projects that you'd like to inherit these tasks, add the following tags:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="<project>/moon.yml"',title:'"<project>/moon.yml"'},"tags: ['rust']\n")),(0,r.kt)("p",null,"It's as simple as that!"),(0,r.kt)("h2",{id:"other-changes"},"Other changes"),(0,r.kt)("p",null,"View the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moonrepo/moon/releases/tag/v1.8.0"},"official release")," for a full list of\nchanges."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added a new action to the graph, ",(0,r.kt)("inlineCode",{parentName:"li"},"SyncWorkspace"),", that'll be used for workspace-level checks."),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"MOON_OUTPUT_STYLE")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"MOON_RETRY_COUNT")," environment variables.")))}m.isMDXComponent=!0},18429:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/v1.8-39d52ddb273bfa80248ada1b595a488e.png"}}]);