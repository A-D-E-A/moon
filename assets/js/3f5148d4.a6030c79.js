"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9754],{35318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,k=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(k,s(s({ref:t},c),{},{components:n})):a.createElement(k,s({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},79022:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(27378),r=n(9619);function i(e){let{header:t,inline:n,updated:i,version:s}=e;return a.createElement(r.Z,{text:`v${s}`,variant:i?"success":"info",className:t?"absolute right-0 top-1.5":n?"inline-block":"ml-2"})}},9619:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(27378),r=n(40624),i=n(31792);const s={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function o(e){let{className:t,icon:n,text:o,variant:l}=e;return a.createElement("span",{className:(0,r.Z)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",l?s[l]:"bg-gray-100 text-gray-800",t)},n&&a.createElement(i.Z,{icon:n,className:"mr-1"}),o)}},82718:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var a=n(25773),r=(n(27378),n(35318)),i=n(79022);const s={title:"Tasks"},o=void 0,l={unversionedId:"concepts/task",id:"concepts/task",title:"Tasks",description:"Tasks are commands that are ran in the context of a project. Underneath the hood, a",source:"@site/docs/concepts/task.mdx",sourceDirName:"concepts",slug:"/concepts/task",permalink:"/docs/concepts/task",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/concepts/task.mdx",tags:[],version:"current",frontMatter:{title:"Tasks"},sidebar:"docs",previous:{title:"Targets",permalink:"/docs/concepts/target"},next:{title:"Task inheritance",permalink:"/docs/concepts/task-inheritance"}},p={},c=[{value:"Names",id:"names",level:2},{value:"Types",id:"types",level:2},{value:"Modes",id:"modes",level:2},{value:"Local only",id:"local-only",level:3},{value:'Interactive<VersionLabel version="1.12.0" />',id:"interactive",level:3},{value:'Persistent<VersionLabel version="1.6.0" />',id:"persistent",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Inheritance",id:"inheritance",level:3}],m={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Tasks are commands that are ran in the context of a ",(0,r.kt)("a",{parentName:"p",href:"./project"},"project"),". Underneath the hood, a\ntask is simply a binary or system command that is ran as a child process."),(0,r.kt)("h2",{id:"names"},"Names"),(0,r.kt)("p",null,"A task name (or identifier) is a unique resource for locating a task ",(0,r.kt)("em",{parentName:"p"},"within")," a project. The name is\nexplicitly configured as a key within the ",(0,r.kt)("a",{parentName:"p",href:"../config/project#tasks"},(0,r.kt)("inlineCode",{parentName:"a"},"tasks"))," setting, and can be\nwritten in camel/kebab/snake case. Names support ",(0,r.kt)("inlineCode",{parentName:"p"},"a-z"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"A-Z"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"0-9"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"_"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"-"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"/"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"."),", and must\nstart with a character."),(0,r.kt)("p",null,"A task name can be paired with a scope to create a ",(0,r.kt)("a",{parentName:"p",href:"./target"},"target"),"."),(0,r.kt)("h2",{id:"types"},"Types"),(0,r.kt)("p",null,"Tasks are grouped into 1 of the following types based on their configured parameters."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Build")," - Task generates one or many artifacts, and is derived from the\n",(0,r.kt)("a",{parentName:"li",href:"../config/project#outputs"},(0,r.kt)("inlineCode",{parentName:"a"},"outputs"))," setting."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Run")," - Task runs a one-off, long-running, or never-ending process, and is derived from the\n",(0,r.kt)("a",{parentName:"li",href:"../config/project#local"},(0,r.kt)("inlineCode",{parentName:"a"},"local"))," setting."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Test")," - Task asserts code is correct and behaves as expected. This includes linting,\ntypechecking, unit tests, and any other form of testing. Is the default.")),(0,r.kt)("h2",{id:"modes"},"Modes"),(0,r.kt)("p",null,"Alongside types, tasks can also grouped into a special mode that provides unique handling within the\naction graph and pipelines."),(0,r.kt)("h3",{id:"local-only"},"Local only"),(0,r.kt)("p",null,"Tasks either run locally, in CI (continuous integration pipelines), or both. For tasks that should\n",(0,r.kt)("em",{parentName:"p"},"only")," be ran locally, for example, development servers and watchers, we provide a mechanism for\nmarking a task as local only. When enabled, caching is turned off, the task will not run in CI,\nterminal output is not captured, and the task is marked as ",(0,r.kt)("a",{parentName:"p",href:"#persistent"},"persistent"),"."),(0,r.kt)("p",null,"To mark a task as local only, enable the ",(0,r.kt)("a",{parentName:"p",href:"../config/project#local"},(0,r.kt)("inlineCode",{parentName:"a"},"local"))," setting."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="moon.yml"',title:'"moon.yml"'},"tasks:\n  dev:\n    command: 'start-dev-server'\n    local: true\n")),(0,r.kt)("h3",{id:"interactive"},"Interactive",(0,r.kt)(i.Z,{version:"1.12.0",mdxType:"VersionLabel"})),(0,r.kt)("p",null,"Tasks that need to interact with the user via terminal prompts are known as interactive tasks.\nBecause interactive tasks require stdin, and it's not possible to have multiple parallel running\ntasks interact with stdin, we isolate interactive tasks from other tasks in the action graph. This\nensures that only 1 interactive task is ran at a time."),(0,r.kt)("p",null,"To mark a task as interactive, enable the ",(0,r.kt)("a",{parentName:"p",href:"../config/project#interactive"},(0,r.kt)("inlineCode",{parentName:"a"},"options.interactive")),"\nsetting."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="moon.yml"',title:'"moon.yml"'},"tasks:\n  init:\n    command: 'init-app'\n    options:\n      interactive: true\n")),(0,r.kt)("h3",{id:"persistent"},"Persistent",(0,r.kt)(i.Z,{version:"1.6.0",mdxType:"VersionLabel"})),(0,r.kt)("p",null,"Tasks that never complete, like servers and watchers, are known as persistent tasks. Persistent\ntasks are typically problematic when it comes to dependency graphs, because if they run in the\nmiddle of the graph, subsequent tasks will never run because the persistent task never completes!"),(0,r.kt)("p",null,"However in moon, this is a non-issue, as we collect all persistent tasks within the action graph and\nrun them ",(0,r.kt)("em",{parentName:"p"},"last as a batch"),". This is perfect for a few reasons:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All persistent tasks are ran in parallel, so they don't block each other."),(0,r.kt)("li",{parentName:"ul"},"Running both the backend API and frontend webapp in parallel is a breeze."),(0,r.kt)("li",{parentName:"ul"},"Dependencies of persistent tasks are guaranteed to have ran and completed.")),(0,r.kt)("p",null,"To mark a task as persistent, enable the ",(0,r.kt)("a",{parentName:"p",href:"../config/project#local"},(0,r.kt)("inlineCode",{parentName:"a"},"local"))," or\n",(0,r.kt)("a",{parentName:"p",href:"../config/project#persistent"},(0,r.kt)("inlineCode",{parentName:"a"},"options.persistent"))," settings."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="moon.yml"',title:'"moon.yml"'},"tasks:\n  dev:\n    command: 'start-dev-server'\n    local: true\n    # OR\n    options:\n      persistent: true\n")),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"Tasks can be configured per project through ",(0,r.kt)("a",{parentName:"p",href:"../config/project"},(0,r.kt)("inlineCode",{parentName:"a"},"moon.yml")),", or for many projects\nthrough ",(0,r.kt)("a",{parentName:"p",href:"../config/tasks"},(0,r.kt)("inlineCode",{parentName:"a"},".moon/tasks.yml")),"."),(0,r.kt)("h3",{id:"inheritance"},"Inheritance"),(0,r.kt)("p",null,"View the official documentation on ",(0,r.kt)("a",{parentName:"p",href:"./task-inheritance"},"task inheritance"),"."))}u.isMDXComponent=!0}}]);