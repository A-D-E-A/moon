"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[35666],{35318:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var r=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=a,f=u["".concat(c,".").concat(d)]||u[d]||p[d]||o;return n?r.createElement(f,i(i({ref:t},m),{},{components:n})):r.createElement(f,i({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},83260:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(25773),a=(n(27378),n(35318));const o={title:"ci"},i=void 0,l={unversionedId:"commands/ci",id:"commands/ci",title:"ci",description:"The moon ci command is a special command that should be ran in a continuous integration (CI)",source:"@site/docs/commands/ci.mdx",sourceDirName:"commands",slug:"/commands/ci",permalink:"/docs/commands/ci",draft:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/commands/ci.mdx",tags:[],version:"current",frontMatter:{title:"ci"},sidebar:"docs",previous:{title:"bin",permalink:"/docs/commands/bin"},next:{title:"check",permalink:"/docs/commands/check"}},c={},s=[{value:"Arguments",id:"arguments",level:3},{value:"Options",id:"options",level:3}],m={toc:s};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"moon ci")," command is a special command that should be ran in a continuous integration (CI)\nenvironment, as it does all the heavy lifting necessary for effectively running tasks."),(0,a.kt)("p",null,"By default this will run all tasks that are affected by touched files and have the\n",(0,a.kt)("a",{parentName:"p",href:"../config/project#runinci"},(0,a.kt)("inlineCode",{parentName:"a"},"runInCI"))," task option enabled."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ moon ci\n")),(0,a.kt)("p",null,"However, you can provide a list of targets to run, instead of relying on ",(0,a.kt)("inlineCode",{parentName:"p"},"runInCI"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ moon ci :build :lint\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"View the official ",(0,a.kt)("a",{parentName:"p",href:"../guides/ci"},"continuous integration guide")," for a more in-depth example of how\nto utilize this command.")),(0,a.kt)("h3",{id:"arguments"},"Arguments"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"...[target]")," - ",(0,a.kt)("a",{parentName:"li",href:"../concepts/target"},"Targets")," to run.")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--base <rev>")," - Base branch, commit, or revision to compare against. Can be set with ",(0,a.kt)("inlineCode",{parentName:"li"},"MOON_BASE"),".\nDefaults to ",(0,a.kt)("a",{parentName:"li",href:"../config/workspace#defaultbranch"},(0,a.kt)("inlineCode",{parentName:"a"},"vcs.defaultBranch")),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--head <rev>")," - Current branch, commit, or revision to compare with. Can be set with ",(0,a.kt)("inlineCode",{parentName:"li"},"MOON_HEAD"),".\nDefaults to ",(0,a.kt)("inlineCode",{parentName:"li"},"HEAD"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--job <index>")," - Index of the current job."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--jobTotal <total>")," Total amount of jobs to run.")))}p.isMDXComponent=!0}}]);